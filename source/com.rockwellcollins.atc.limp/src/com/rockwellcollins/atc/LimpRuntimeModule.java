/*
 * generated by Xtext
 */
package com.rockwellcollins.atc;

import org.eclipse.xtext.conversion.IValueConverterService;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.scoping.IGlobalScopeProvider;
import org.eclipse.xtext.scoping.impl.ImportUriGlobalScopeProvider;
import org.eclipse.xtext.serializer.tokens.ICrossReferenceSerializer;

import com.rockwellcollins.atc.limp.converter.LimpValueConverterService;
import com.rockwellcollins.atc.limp.naming.LimpQualifiedNameProvider;
import com.rockwellcollins.atc.limp.serializer.LimpCrossReferenceSerializer;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class LimpRuntimeModule extends com.rockwellcollins.atc.AbstractLimpRuntimeModule {

	@Override
	public Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return ImportUriGlobalScopeProvider.class;
	}
	
	public Class<? extends IGenerator> bindIGenerator() {
		return IGenerator.NullGenerator.class;
	}
	
	@SuppressWarnings("restriction")
	public Class<? extends ICrossReferenceSerializer> bindICrossReferenceSerializer() {
		return LimpCrossReferenceSerializer.class;
	}
	
	@Override
	public Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return LimpQualifiedNameProvider.class;
	}
	
	@Override
	public Class<? extends IValueConverterService> bindIValueConverterService() {
		return LimpValueConverterService.class;
	}
}
