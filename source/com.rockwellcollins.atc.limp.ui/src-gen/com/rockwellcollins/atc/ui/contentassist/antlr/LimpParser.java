/*
 * generated by Xtext
 */
package com.rockwellcollins.atc.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.rockwellcollins.atc.services.LimpGrammarAccess;

public class LimpParser extends AbstractContentAssistParser {
	
	@Inject
	private LimpGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.rockwellcollins.atc.ui.contentassist.antlr.internal.InternalLimpParser createParser() {
		com.rockwellcollins.atc.ui.contentassist.antlr.internal.InternalLimpParser result = new com.rockwellcollins.atc.ui.contentassist.antlr.internal.InternalLimpParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDeclarationAccess().getAlternatives(), "rule__Declaration__Alternatives");
					put(grammarAccess.getTypeDeclarationAccess().getAlternatives(), "rule__TypeDeclaration__Alternatives");
					put(grammarAccess.getVarBlockAccess().getAlternatives(), "rule__VarBlock__Alternatives");
					put(grammarAccess.getVariableRefAccess().getAlternatives(), "rule__VariableRef__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getAttributeBlockAccess().getAlternatives(), "rule__AttributeBlock__Alternatives");
					put(grammarAccess.getAttributeAccess().getAlternatives(), "rule__Attribute__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getElseAccess().getAlternatives(), "rule__Else__Alternatives");
					put(grammarAccess.getEquationAccess().getAlternatives(), "rule__Equation__Alternatives");
					put(grammarAccess.getChoiceExprAccess().getAlternatives(), "rule__ChoiceExpr__Alternatives");
					put(grammarAccess.getRelationalOpAccess().getAlternatives(), "rule__RelationalOp__Alternatives");
					put(grammarAccess.getPlusExprAccess().getOpAlternatives_1_0_0_1_0(), "rule__PlusExpr__OpAlternatives_1_0_0_1_0");
					put(grammarAccess.getMultExprAccess().getOpAlternatives_1_0_0_1_0(), "rule__MultExpr__OpAlternatives_1_0_0_1_0");
					put(grammarAccess.getUnaryExprAccess().getAlternatives(), "rule__UnaryExpr__Alternatives");
					put(grammarAccess.getAccessExprAccess().getAlternatives_1(), "rule__AccessExpr__Alternatives_1");
					put(grammarAccess.getFunctionRefAccess().getAlternatives(), "rule__FunctionRef__Alternatives");
					put(grammarAccess.getTerminalExprAccess().getAlternatives(), "rule__TerminalExpr__Alternatives");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getExternalFunctionAccess().getGroup(), "rule__ExternalFunction__Group__0");
					put(grammarAccess.getExternalProcedureAccess().getGroup(), "rule__ExternalProcedure__Group__0");
					put(grammarAccess.getLocalFunctionAccess().getGroup(), "rule__LocalFunction__Group__0");
					put(grammarAccess.getLocalProcedureAccess().getGroup(), "rule__LocalProcedure__Group__0");
					put(grammarAccess.getTypeDeclarationAccess().getGroup_0(), "rule__TypeDeclaration__Group_0__0");
					put(grammarAccess.getVarBlockAccess().getGroup_0(), "rule__VarBlock__Group_0__0");
					put(grammarAccess.getEnumTypeDefAccess().getGroup(), "rule__EnumTypeDef__Group__0");
					put(grammarAccess.getEnumTypeDefAccess().getGroup_6(), "rule__EnumTypeDef__Group_6__0");
					put(grammarAccess.getEnumValueAccess().getGroup(), "rule__EnumValue__Group__0");
					put(grammarAccess.getRecordTypeDefAccess().getGroup(), "rule__RecordTypeDef__Group__0");
					put(grammarAccess.getRecordTypeDefAccess().getGroup_6(), "rule__RecordTypeDef__Group_6__0");
					put(grammarAccess.getArrayTypeDefAccess().getGroup(), "rule__ArrayTypeDef__Group__0");
					put(grammarAccess.getAbstractTypeDefAccess().getGroup(), "rule__AbstractTypeDef__Group__0");
					put(grammarAccess.getRecordFieldTypeAccess().getGroup(), "rule__RecordFieldType__Group__0");
					put(grammarAccess.getConstantDeclarationAccess().getGroup(), "rule__ConstantDeclaration__Group__0");
					put(grammarAccess.getConstantDeclarationAccess().getGroup_4(), "rule__ConstantDeclaration__Group_4__0");
					put(grammarAccess.getGlobalDeclarationAccess().getGroup(), "rule__GlobalDeclaration__Group__0");
					put(grammarAccess.getInputArgListAccess().getGroup(), "rule__InputArgList__Group__0");
					put(grammarAccess.getInputArgListAccess().getGroup_1(), "rule__InputArgList__Group_1__0");
					put(grammarAccess.getInputArgListAccess().getGroup_1_1(), "rule__InputArgList__Group_1_1__0");
					put(grammarAccess.getInputArgAccess().getGroup(), "rule__InputArg__Group__0");
					put(grammarAccess.getLocalArgAccess().getGroup(), "rule__LocalArg__Group__0");
					put(grammarAccess.getOutputArgListAccess().getGroup(), "rule__OutputArgList__Group__0");
					put(grammarAccess.getOutputArgListAccess().getGroup_1(), "rule__OutputArgList__Group_1__0");
					put(grammarAccess.getOutputArgListAccess().getGroup_1_1(), "rule__OutputArgList__Group_1_1__0");
					put(grammarAccess.getOutputArgAccess().getGroup(), "rule__OutputArg__Group__0");
					put(grammarAccess.getTypeAccess().getGroup_0(), "rule__Type__Group_0__0");
					put(grammarAccess.getTypeAccess().getGroup_1(), "rule__Type__Group_1__0");
					put(grammarAccess.getTypeAccess().getGroup_2(), "rule__Type__Group_2__0");
					put(grammarAccess.getTypeAccess().getGroup_3(), "rule__Type__Group_3__0");
					put(grammarAccess.getTypeAccess().getGroup_4(), "rule__Type__Group_4__0");
					put(grammarAccess.getTypeAccess().getGroup_5(), "rule__Type__Group_5__0");
					put(grammarAccess.getTypeAccess().getGroup_6(), "rule__Type__Group_6__0");
					put(grammarAccess.getTypeAccess().getGroup_7(), "rule__Type__Group_7__0");
					put(grammarAccess.getTypeAccess().getGroup_8(), "rule__Type__Group_8__0");
					put(grammarAccess.getTypeAccess().getGroup_9(), "rule__Type__Group_9__0");
					put(grammarAccess.getAttributeBlockAccess().getGroup_0(), "rule__AttributeBlock__Group_0__0");
					put(grammarAccess.getPreconditionAccess().getGroup(), "rule__Precondition__Group__0");
					put(grammarAccess.getPostconditionAccess().getGroup(), "rule__Postcondition__Group__0");
					put(grammarAccess.getDefineAccess().getGroup(), "rule__Define__Group__0");
					put(grammarAccess.getDefineAccess().getGroup_2(), "rule__Define__Group_2__0");
					put(grammarAccess.getUsesAccess().getGroup(), "rule__Uses__Group__0");
					put(grammarAccess.getUsesAccess().getGroup_2(), "rule__Uses__Group_2__0");
					put(grammarAccess.getStatementBlockAccess().getGroup(), "rule__StatementBlock__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_7(), "rule__Statement__Group_7__0");
					put(grammarAccess.getStatementAccess().getGroup_8(), "rule__Statement__Group_8__0");
					put(grammarAccess.getStatementAccess().getGroup_9(), "rule__Statement__Group_9__0");
					put(grammarAccess.getVoidStatementAccess().getGroup(), "rule__VoidStatement__Group__0");
					put(grammarAccess.getAssignmentStatementAccess().getGroup(), "rule__AssignmentStatement__Group__0");
					put(grammarAccess.getIfThenElseStatementAccess().getGroup(), "rule__IfThenElseStatement__Group__0");
					put(grammarAccess.getElseAccess().getGroup_0(), "rule__Else__Group_0__0");
					put(grammarAccess.getElseAccess().getGroup_1(), "rule__Else__Group_1__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getLabelStatementAccess().getGroup(), "rule__LabelStatement__Group__0");
					put(grammarAccess.getGotoStatementAccess().getGroup(), "rule__GotoStatement__Group__0");
					put(grammarAccess.getGotoStatementAccess().getGroup_3(), "rule__GotoStatement__Group_3__0");
					put(grammarAccess.getEquationBlockAccess().getGroup(), "rule__EquationBlock__Group__0");
					put(grammarAccess.getIdListAccess().getGroup(), "rule__IdList__Group__0");
					put(grammarAccess.getIdListAccess().getGroup_1(), "rule__IdList__Group_1__0");
					put(grammarAccess.getIfThenElseExprAccess().getGroup(), "rule__IfThenElseExpr__Group__0");
					put(grammarAccess.getIfThenElseExprAccess().getGroup_1(), "rule__IfThenElseExpr__Group_1__0");
					put(grammarAccess.getIfThenElseExprAccess().getGroup_1_0(), "rule__IfThenElseExpr__Group_1_0__0");
					put(grammarAccess.getIfThenElseExprAccess().getGroup_1_0_0(), "rule__IfThenElseExpr__Group_1_0_0__0");
					put(grammarAccess.getChoiceExprAccess().getGroup_0(), "rule__ChoiceExpr__Group_0__0");
					put(grammarAccess.getImpliesExprAccess().getGroup(), "rule__ImpliesExpr__Group__0");
					put(grammarAccess.getImpliesExprAccess().getGroup_1(), "rule__ImpliesExpr__Group_1__0");
					put(grammarAccess.getImpliesExprAccess().getGroup_1_0(), "rule__ImpliesExpr__Group_1_0__0");
					put(grammarAccess.getImpliesExprAccess().getGroup_1_0_0(), "rule__ImpliesExpr__Group_1_0_0__0");
					put(grammarAccess.getOrExprAccess().getGroup(), "rule__OrExpr__Group__0");
					put(grammarAccess.getOrExprAccess().getGroup_1(), "rule__OrExpr__Group_1__0");
					put(grammarAccess.getOrExprAccess().getGroup_1_0(), "rule__OrExpr__Group_1_0__0");
					put(grammarAccess.getOrExprAccess().getGroup_1_0_0(), "rule__OrExpr__Group_1_0_0__0");
					put(grammarAccess.getAndExprAccess().getGroup(), "rule__AndExpr__Group__0");
					put(grammarAccess.getAndExprAccess().getGroup_1(), "rule__AndExpr__Group_1__0");
					put(grammarAccess.getAndExprAccess().getGroup_1_0(), "rule__AndExpr__Group_1_0__0");
					put(grammarAccess.getAndExprAccess().getGroup_1_0_0(), "rule__AndExpr__Group_1_0_0__0");
					put(grammarAccess.getRelationalExprAccess().getGroup(), "rule__RelationalExpr__Group__0");
					put(grammarAccess.getRelationalExprAccess().getGroup_1(), "rule__RelationalExpr__Group_1__0");
					put(grammarAccess.getRelationalExprAccess().getGroup_1_0(), "rule__RelationalExpr__Group_1_0__0");
					put(grammarAccess.getRelationalExprAccess().getGroup_1_0_0(), "rule__RelationalExpr__Group_1_0_0__0");
					put(grammarAccess.getPlusExprAccess().getGroup(), "rule__PlusExpr__Group__0");
					put(grammarAccess.getPlusExprAccess().getGroup_1(), "rule__PlusExpr__Group_1__0");
					put(grammarAccess.getPlusExprAccess().getGroup_1_0(), "rule__PlusExpr__Group_1_0__0");
					put(grammarAccess.getPlusExprAccess().getGroup_1_0_0(), "rule__PlusExpr__Group_1_0_0__0");
					put(grammarAccess.getMultExprAccess().getGroup(), "rule__MultExpr__Group__0");
					put(grammarAccess.getMultExprAccess().getGroup_1(), "rule__MultExpr__Group_1__0");
					put(grammarAccess.getMultExprAccess().getGroup_1_0(), "rule__MultExpr__Group_1_0__0");
					put(grammarAccess.getMultExprAccess().getGroup_1_0_0(), "rule__MultExpr__Group_1_0_0__0");
					put(grammarAccess.getUnaryExprAccess().getGroup_1(), "rule__UnaryExpr__Group_1__0");
					put(grammarAccess.getUnaryExprAccess().getGroup_2(), "rule__UnaryExpr__Group_2__0");
					put(grammarAccess.getAccessExprAccess().getGroup(), "rule__AccessExpr__Group__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_0(), "rule__AccessExpr__Group_1_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_0_0(), "rule__AccessExpr__Group_1_0_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_0_0_0(), "rule__AccessExpr__Group_1_0_0_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_1(), "rule__AccessExpr__Group_1_1__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_1_0(), "rule__AccessExpr__Group_1_1_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_1_0_0(), "rule__AccessExpr__Group_1_1_0_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_2(), "rule__AccessExpr__Group_1_2__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_2_0(), "rule__AccessExpr__Group_1_2_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_2_0_0(), "rule__AccessExpr__Group_1_2_0_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_2_2(), "rule__AccessExpr__Group_1_2_2__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_2_2_0(), "rule__AccessExpr__Group_1_2_2_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_2_2_0_0(), "rule__AccessExpr__Group_1_2_2_0_0__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_0(), "rule__TerminalExpr__Group_0__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_1(), "rule__TerminalExpr__Group_1__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_2(), "rule__TerminalExpr__Group_2__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_3(), "rule__TerminalExpr__Group_3__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_4(), "rule__TerminalExpr__Group_4__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_5(), "rule__TerminalExpr__Group_5__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_6(), "rule__TerminalExpr__Group_6__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_7(), "rule__TerminalExpr__Group_7__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_10(), "rule__TerminalExpr__Group_10__0");
					put(grammarAccess.getTerminalExprAccess().getGroup_11(), "rule__TerminalExpr__Group_11__0");
					put(grammarAccess.getArrayExprAccess().getGroup(), "rule__ArrayExpr__Group__0");
					put(grammarAccess.getArrayExprAccess().getGroup_4(), "rule__ArrayExpr__Group_4__0");
					put(grammarAccess.getRecordExprAccess().getGroup(), "rule__RecordExpr__Group__0");
					put(grammarAccess.getRecordExprAccess().getGroup_4(), "rule__RecordExpr__Group_4__0");
					put(grammarAccess.getRecordFieldExprAccess().getGroup(), "rule__RecordFieldExpr__Group__0");
					put(grammarAccess.getExprListAccess().getGroup(), "rule__ExprList__Group__0");
					put(grammarAccess.getExprListAccess().getGroup_1(), "rule__ExprList__Group_1__0");
					put(grammarAccess.getExprListAccess().getGroup_1_1(), "rule__ExprList__Group_1_1__0");
					put(grammarAccess.getExtendedTypeAccess().getGroup(), "rule__ExtendedType__Group__0");
					put(grammarAccess.getExtendedTypeAccess().getGroup_3(), "rule__ExtendedType__Group_3__0");
					put(grammarAccess.getExtendedExprAccess().getGroup(), "rule__ExtendedExpr__Group__0");
					put(grammarAccess.getSpecificationAccess().getDeclarationsAssignment(), "rule__Specification__DeclarationsAssignment");
					put(grammarAccess.getCommentAccess().getCommentAssignment(), "rule__Comment__CommentAssignment");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getExternalFunctionAccess().getNameAssignment_2(), "rule__ExternalFunction__NameAssignment_2");
					put(grammarAccess.getExternalFunctionAccess().getInputsAssignment_4(), "rule__ExternalFunction__InputsAssignment_4");
					put(grammarAccess.getExternalFunctionAccess().getOutputAssignment_8(), "rule__ExternalFunction__OutputAssignment_8");
					put(grammarAccess.getExternalProcedureAccess().getNameAssignment_2(), "rule__ExternalProcedure__NameAssignment_2");
					put(grammarAccess.getExternalProcedureAccess().getInputsAssignment_4(), "rule__ExternalProcedure__InputsAssignment_4");
					put(grammarAccess.getExternalProcedureAccess().getOutputsAssignment_8(), "rule__ExternalProcedure__OutputsAssignment_8");
					put(grammarAccess.getExternalProcedureAccess().getAttributeBlockAssignment_10(), "rule__ExternalProcedure__AttributeBlockAssignment_10");
					put(grammarAccess.getLocalFunctionAccess().getNameAssignment_1(), "rule__LocalFunction__NameAssignment_1");
					put(grammarAccess.getLocalFunctionAccess().getInputsAssignment_3(), "rule__LocalFunction__InputsAssignment_3");
					put(grammarAccess.getLocalFunctionAccess().getOutputAssignment_7(), "rule__LocalFunction__OutputAssignment_7");
					put(grammarAccess.getLocalFunctionAccess().getVarBlockAssignment_9(), "rule__LocalFunction__VarBlockAssignment_9");
					put(grammarAccess.getLocalFunctionAccess().getEquationBlockAssignment_11(), "rule__LocalFunction__EquationBlockAssignment_11");
					put(grammarAccess.getLocalProcedureAccess().getNameAssignment_1(), "rule__LocalProcedure__NameAssignment_1");
					put(grammarAccess.getLocalProcedureAccess().getInputsAssignment_3(), "rule__LocalProcedure__InputsAssignment_3");
					put(grammarAccess.getLocalProcedureAccess().getOutputsAssignment_7(), "rule__LocalProcedure__OutputsAssignment_7");
					put(grammarAccess.getLocalProcedureAccess().getVarBlockAssignment_9(), "rule__LocalProcedure__VarBlockAssignment_9");
					put(grammarAccess.getLocalProcedureAccess().getAttributeBlockAssignment_10(), "rule__LocalProcedure__AttributeBlockAssignment_10");
					put(grammarAccess.getLocalProcedureAccess().getStatementblockAssignment_12(), "rule__LocalProcedure__StatementblockAssignment_12");
					put(grammarAccess.getTypeDeclarationAccess().getNameAssignment_0_2(), "rule__TypeDeclaration__NameAssignment_0_2");
					put(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_0_4(), "rule__TypeDeclaration__TypeAssignment_0_4");
					put(grammarAccess.getVarBlockAccess().getLocalsAssignment_0_3(), "rule__VarBlock__LocalsAssignment_0_3");
					put(grammarAccess.getEnumTypeDefAccess().getNameAssignment_2(), "rule__EnumTypeDef__NameAssignment_2");
					put(grammarAccess.getEnumTypeDefAccess().getEnumerationsAssignment_5(), "rule__EnumTypeDef__EnumerationsAssignment_5");
					put(grammarAccess.getEnumTypeDefAccess().getEnumerationsAssignment_6_1(), "rule__EnumTypeDef__EnumerationsAssignment_6_1");
					put(grammarAccess.getEnumValueAccess().getNameAssignment_1(), "rule__EnumValue__NameAssignment_1");
					put(grammarAccess.getRecordTypeDefAccess().getNameAssignment_2(), "rule__RecordTypeDef__NameAssignment_2");
					put(grammarAccess.getRecordTypeDefAccess().getFieldsAssignment_5(), "rule__RecordTypeDef__FieldsAssignment_5");
					put(grammarAccess.getRecordTypeDefAccess().getFieldsAssignment_6_1(), "rule__RecordTypeDef__FieldsAssignment_6_1");
					put(grammarAccess.getArrayTypeDefAccess().getNameAssignment_2(), "rule__ArrayTypeDef__NameAssignment_2");
					put(grammarAccess.getArrayTypeDefAccess().getBaseTypeAssignment_4(), "rule__ArrayTypeDef__BaseTypeAssignment_4");
					put(grammarAccess.getArrayTypeDefAccess().getSizeAssignment_6(), "rule__ArrayTypeDef__SizeAssignment_6");
					put(grammarAccess.getAbstractTypeDefAccess().getNameAssignment_2(), "rule__AbstractTypeDef__NameAssignment_2");
					put(grammarAccess.getRecordFieldTypeAccess().getFieldNameAssignment_0(), "rule__RecordFieldType__FieldNameAssignment_0");
					put(grammarAccess.getRecordFieldTypeAccess().getFieldTypeAssignment_2(), "rule__RecordFieldType__FieldTypeAssignment_2");
					put(grammarAccess.getConstantDeclarationAccess().getNameAssignment_1(), "rule__ConstantDeclaration__NameAssignment_1");
					put(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_3(), "rule__ConstantDeclaration__TypeAssignment_3");
					put(grammarAccess.getConstantDeclarationAccess().getExprAssignment_4_1(), "rule__ConstantDeclaration__ExprAssignment_4_1");
					put(grammarAccess.getGlobalDeclarationAccess().getNameAssignment_1(), "rule__GlobalDeclaration__NameAssignment_1");
					put(grammarAccess.getGlobalDeclarationAccess().getTypeAssignment_3(), "rule__GlobalDeclaration__TypeAssignment_3");
					put(grammarAccess.getInputArgListAccess().getInputArgsAssignment_1_0(), "rule__InputArgList__InputArgsAssignment_1_0");
					put(grammarAccess.getInputArgListAccess().getInputArgsAssignment_1_1_1(), "rule__InputArgList__InputArgsAssignment_1_1_1");
					put(grammarAccess.getInputArgAccess().getNameAssignment_0(), "rule__InputArg__NameAssignment_0");
					put(grammarAccess.getInputArgAccess().getTypeAssignment_2(), "rule__InputArg__TypeAssignment_2");
					put(grammarAccess.getLocalArgAccess().getNameAssignment_0(), "rule__LocalArg__NameAssignment_0");
					put(grammarAccess.getLocalArgAccess().getTypeAssignment_2(), "rule__LocalArg__TypeAssignment_2");
					put(grammarAccess.getOutputArgListAccess().getOutputArgsAssignment_1_0(), "rule__OutputArgList__OutputArgsAssignment_1_0");
					put(grammarAccess.getOutputArgListAccess().getOutputArgsAssignment_1_1_1(), "rule__OutputArgList__OutputArgsAssignment_1_1_1");
					put(grammarAccess.getOutputArgAccess().getNameAssignment_0(), "rule__OutputArg__NameAssignment_0");
					put(grammarAccess.getOutputArgAccess().getTypeAssignment_2(), "rule__OutputArg__TypeAssignment_2");
					put(grammarAccess.getTypeAccess().getEnumDefAssignment_5_2(), "rule__Type__EnumDefAssignment_5_2");
					put(grammarAccess.getTypeAccess().getRecordDefAssignment_6_2(), "rule__Type__RecordDefAssignment_6_2");
					put(grammarAccess.getTypeAccess().getArrayDefAssignment_7_2(), "rule__Type__ArrayDefAssignment_7_2");
					put(grammarAccess.getTypeAccess().getAbstractDefAssignment_8_2(), "rule__Type__AbstractDefAssignment_8_2");
					put(grammarAccess.getTypeAccess().getAliasAssignment_9_1(), "rule__Type__AliasAssignment_9_1");
					put(grammarAccess.getAttributeBlockAccess().getAttributeListAssignment_0_3(), "rule__AttributeBlock__AttributeListAssignment_0_3");
					put(grammarAccess.getPreconditionAccess().getNameAssignment_1(), "rule__Precondition__NameAssignment_1");
					put(grammarAccess.getPreconditionAccess().getExprAssignment_3(), "rule__Precondition__ExprAssignment_3");
					put(grammarAccess.getPostconditionAccess().getNameAssignment_1(), "rule__Postcondition__NameAssignment_1");
					put(grammarAccess.getPostconditionAccess().getExprAssignment_3(), "rule__Postcondition__ExprAssignment_3");
					put(grammarAccess.getDefineUseRefAccess().getReferenceExprAssignment(), "rule__DefineUseRef__ReferenceExprAssignment");
					put(grammarAccess.getDefineAccess().getElementsAssignment_1(), "rule__Define__ElementsAssignment_1");
					put(grammarAccess.getDefineAccess().getElementsAssignment_2_1(), "rule__Define__ElementsAssignment_2_1");
					put(grammarAccess.getUsesAccess().getElementsAssignment_1(), "rule__Uses__ElementsAssignment_1");
					put(grammarAccess.getUsesAccess().getElementsAssignment_2_1(), "rule__Uses__ElementsAssignment_2_1");
					put(grammarAccess.getStatementBlockAccess().getStatementsAssignment_2(), "rule__StatementBlock__StatementsAssignment_2");
					put(grammarAccess.getVoidStatementAccess().getExprAssignment_0(), "rule__VoidStatement__ExprAssignment_0");
					put(grammarAccess.getAssignmentStatementAccess().getIdsAssignment_0(), "rule__AssignmentStatement__IdsAssignment_0");
					put(grammarAccess.getAssignmentStatementAccess().getRhsAssignment_2(), "rule__AssignmentStatement__RhsAssignment_2");
					put(grammarAccess.getIfThenElseStatementAccess().getCondAssignment_1(), "rule__IfThenElseStatement__CondAssignment_1");
					put(grammarAccess.getIfThenElseStatementAccess().getThenBlockAssignment_3(), "rule__IfThenElseStatement__ThenBlockAssignment_3");
					put(grammarAccess.getIfThenElseStatementAccess().getElseAssignment_4(), "rule__IfThenElseStatement__ElseAssignment_4");
					put(grammarAccess.getElseAccess().getBlockAssignment_0_2(), "rule__Else__BlockAssignment_0_2");
					put(grammarAccess.getElseAccess().getIfThenElseAssignment_1_2(), "rule__Else__IfThenElseAssignment_1_2");
					put(grammarAccess.getWhileStatementAccess().getCondAssignment_1(), "rule__WhileStatement__CondAssignment_1");
					put(grammarAccess.getWhileStatementAccess().getBlockAssignment_2(), "rule__WhileStatement__BlockAssignment_2");
					put(grammarAccess.getForStatementAccess().getInitStatementAssignment_2(), "rule__ForStatement__InitStatementAssignment_2");
					put(grammarAccess.getForStatementAccess().getLimitExprAssignment_3(), "rule__ForStatement__LimitExprAssignment_3");
					put(grammarAccess.getForStatementAccess().getIncrementStatementAssignment_5(), "rule__ForStatement__IncrementStatementAssignment_5");
					put(grammarAccess.getForStatementAccess().getBlockAssignment_7(), "rule__ForStatement__BlockAssignment_7");
					put(grammarAccess.getLabelStatementAccess().getNameAssignment_1(), "rule__LabelStatement__NameAssignment_1");
					put(grammarAccess.getGotoStatementAccess().getLabelAssignment_2(), "rule__GotoStatement__LabelAssignment_2");
					put(grammarAccess.getGotoStatementAccess().getWhenExprAssignment_3_1(), "rule__GotoStatement__WhenExprAssignment_3_1");
					put(grammarAccess.getEquationBlockAccess().getEquationsAssignment_2(), "rule__EquationBlock__EquationsAssignment_2");
					put(grammarAccess.getIdListAccess().getIdsAssignment_0(), "rule__IdList__IdsAssignment_0");
					put(grammarAccess.getIdListAccess().getIdsAssignment_1_1(), "rule__IdList__IdsAssignment_1_1");
					put(grammarAccess.getIfThenElseExprAccess().getThenExprAssignment_1_1(), "rule__IfThenElseExpr__ThenExprAssignment_1_1");
					put(grammarAccess.getIfThenElseExprAccess().getElseExprAssignment_1_3(), "rule__IfThenElseExpr__ElseExprAssignment_1_3");
					put(grammarAccess.getChoiceExprAccess().getFirstAssignment_0_3(), "rule__ChoiceExpr__FirstAssignment_0_3");
					put(grammarAccess.getChoiceExprAccess().getSecondAssignment_0_5(), "rule__ChoiceExpr__SecondAssignment_0_5");
					put(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1(), "rule__ImpliesExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1(), "rule__ImpliesExpr__RightAssignment_1_1");
					put(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1(), "rule__OrExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getOrExprAccess().getRightAssignment_1_1(), "rule__OrExpr__RightAssignment_1_1");
					put(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1(), "rule__AndExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getAndExprAccess().getRightAssignment_1_1(), "rule__AndExpr__RightAssignment_1_1");
					put(grammarAccess.getRelationalExprAccess().getOpAssignment_1_0_0_1(), "rule__RelationalExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getRelationalExprAccess().getRightAssignment_1_1(), "rule__RelationalExpr__RightAssignment_1_1");
					put(grammarAccess.getPlusExprAccess().getOpAssignment_1_0_0_1(), "rule__PlusExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getPlusExprAccess().getRightAssignment_1_1(), "rule__PlusExpr__RightAssignment_1_1");
					put(grammarAccess.getMultExprAccess().getOpAssignment_1_0_0_1(), "rule__MultExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getMultExprAccess().getRightAssignment_1_1(), "rule__MultExpr__RightAssignment_1_1");
					put(grammarAccess.getUnaryExprAccess().getExprAssignment_1_2(), "rule__UnaryExpr__ExprAssignment_1_2");
					put(grammarAccess.getUnaryExprAccess().getExprAssignment_2_2(), "rule__UnaryExpr__ExprAssignment_2_2");
					put(grammarAccess.getAccessExprAccess().getFieldAssignment_1_0_1(), "rule__AccessExpr__FieldAssignment_1_0_1");
					put(grammarAccess.getAccessExprAccess().getFieldAssignment_1_1_0_0_2(), "rule__AccessExpr__FieldAssignment_1_1_0_0_2");
					put(grammarAccess.getAccessExprAccess().getValueAssignment_1_1_1(), "rule__AccessExpr__ValueAssignment_1_1_1");
					put(grammarAccess.getAccessExprAccess().getIndexAssignment_1_2_1(), "rule__AccessExpr__IndexAssignment_1_2_1");
					put(grammarAccess.getAccessExprAccess().getValueAssignment_1_2_2_1(), "rule__AccessExpr__ValueAssignment_1_2_2_1");
					put(grammarAccess.getTerminalExprAccess().getBoolValAssignment_1_1(), "rule__TerminalExpr__BoolValAssignment_1_1");
					put(grammarAccess.getTerminalExprAccess().getIntValAssignment_2_1(), "rule__TerminalExpr__IntValAssignment_2_1");
					put(grammarAccess.getTerminalExprAccess().getRealValAssignment_4_1(), "rule__TerminalExpr__RealValAssignment_4_1");
					put(grammarAccess.getTerminalExprAccess().getStringValAssignment_5_1(), "rule__TerminalExpr__StringValAssignment_5_1");
					put(grammarAccess.getTerminalExprAccess().getIdAssignment_6_2(), "rule__TerminalExpr__IdAssignment_6_2");
					put(grammarAccess.getTerminalExprAccess().getIdAssignment_7_2(), "rule__TerminalExpr__IdAssignment_7_2");
					put(grammarAccess.getTerminalExprAccess().getIdAssignment_10_1(), "rule__TerminalExpr__IdAssignment_10_1");
					put(grammarAccess.getTerminalExprAccess().getIdAssignment_11_1(), "rule__TerminalExpr__IdAssignment_11_1");
					put(grammarAccess.getTerminalExprAccess().getExprsAssignment_11_3(), "rule__TerminalExpr__ExprsAssignment_11_3");
					put(grammarAccess.getArrayExprAccess().getArrayDefinitionAssignment_1(), "rule__ArrayExpr__ArrayDefinitionAssignment_1");
					put(grammarAccess.getArrayExprAccess().getExprListAssignment_3(), "rule__ArrayExpr__ExprListAssignment_3");
					put(grammarAccess.getArrayExprAccess().getExprListAssignment_4_1(), "rule__ArrayExpr__ExprListAssignment_4_1");
					put(grammarAccess.getRecordExprAccess().getRecordDefinitionAssignment_1(), "rule__RecordExpr__RecordDefinitionAssignment_1");
					put(grammarAccess.getRecordExprAccess().getFieldExprListAssignment_3(), "rule__RecordExpr__FieldExprListAssignment_3");
					put(grammarAccess.getRecordExprAccess().getFieldExprListAssignment_4_1(), "rule__RecordExpr__FieldExprListAssignment_4_1");
					put(grammarAccess.getRecordFieldExprAccess().getFieldNameAssignment_0(), "rule__RecordFieldExpr__FieldNameAssignment_0");
					put(grammarAccess.getRecordFieldExprAccess().getFieldExprAssignment_2(), "rule__RecordFieldExpr__FieldExprAssignment_2");
					put(grammarAccess.getExprListAccess().getExprListAssignment_1_0(), "rule__ExprList__ExprListAssignment_1_0");
					put(grammarAccess.getExprListAccess().getExprListAssignment_1_1_1(), "rule__ExprList__ExprListAssignment_1_1_1");
					put(grammarAccess.getExtendedTypeAccess().getTypeListAssignment_2(), "rule__ExtendedType__TypeListAssignment_2");
					put(grammarAccess.getExtendedTypeAccess().getTypeListAssignment_3_1(), "rule__ExtendedType__TypeListAssignment_3_1");
					put(grammarAccess.getExtendedExprAccess().getValueAssignment_2(), "rule__ExtendedExpr__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.rockwellcollins.atc.ui.contentassist.antlr.internal.InternalLimpParser typedParser = (com.rockwellcollins.atc.ui.contentassist.antlr.internal.InternalLimpParser) parser;
			typedParser.entryRuleSpecification();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT" };
	}
	
	public LimpGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(LimpGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
