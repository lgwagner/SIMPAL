/*
 * generated by Xtext
 */
grammar InternalLimp;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.rockwellcollins.atc.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.rockwellcollins.atc.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.rockwellcollins.atc.services.LimpGrammarAccess;

}

@parser::members {
 
 	private LimpGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LimpGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSpecification
entryRuleSpecification 
:
{ before(grammarAccess.getSpecificationRule()); }
	 ruleSpecification
{ after(grammarAccess.getSpecificationRule()); } 
	 EOF 
;

// Rule Specification
ruleSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecificationAccess().getDeclarationsAssignment()); }
(rule__Specification__DeclarationsAssignment)*
{ after(grammarAccess.getSpecificationAccess().getDeclarationsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getCommentAssignment()); }
(rule__Comment__CommentAssignment)
{ after(grammarAccess.getCommentAccess().getCommentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExternalFunction
entryRuleExternalFunction 
:
{ before(grammarAccess.getExternalFunctionRule()); }
	 ruleExternalFunction
{ after(grammarAccess.getExternalFunctionRule()); } 
	 EOF 
;

// Rule ExternalFunction
ruleExternalFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalFunctionAccess().getGroup()); }
(rule__ExternalFunction__Group__0)
{ after(grammarAccess.getExternalFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExternalProcedure
entryRuleExternalProcedure 
:
{ before(grammarAccess.getExternalProcedureRule()); }
	 ruleExternalProcedure
{ after(grammarAccess.getExternalProcedureRule()); } 
	 EOF 
;

// Rule ExternalProcedure
ruleExternalProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalProcedureAccess().getGroup()); }
(rule__ExternalProcedure__Group__0)
{ after(grammarAccess.getExternalProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalFunction
entryRuleLocalFunction 
:
{ before(grammarAccess.getLocalFunctionRule()); }
	 ruleLocalFunction
{ after(grammarAccess.getLocalFunctionRule()); } 
	 EOF 
;

// Rule LocalFunction
ruleLocalFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalFunctionAccess().getGroup()); }
(rule__LocalFunction__Group__0)
{ after(grammarAccess.getLocalFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalProcedure
entryRuleLocalProcedure 
:
{ before(grammarAccess.getLocalProcedureRule()); }
	 ruleLocalProcedure
{ after(grammarAccess.getLocalProcedureRule()); } 
	 EOF 
;

// Rule LocalProcedure
ruleLocalProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalProcedureAccess().getGroup()); }
(rule__LocalProcedure__Group__0)
{ after(grammarAccess.getLocalProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration 
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives()); }
(rule__TypeDeclaration__Alternatives)
{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarBlock
entryRuleVarBlock 
:
{ before(grammarAccess.getVarBlockRule()); }
	 ruleVarBlock
{ after(grammarAccess.getVarBlockRule()); } 
	 EOF 
;

// Rule VarBlock
ruleVarBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarBlockAccess().getAlternatives()); }
(rule__VarBlock__Alternatives)
{ after(grammarAccess.getVarBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumTypeDef
entryRuleEnumTypeDef 
:
{ before(grammarAccess.getEnumTypeDefRule()); }
	 ruleEnumTypeDef
{ after(grammarAccess.getEnumTypeDefRule()); } 
	 EOF 
;

// Rule EnumTypeDef
ruleEnumTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumTypeDefAccess().getGroup()); }
(rule__EnumTypeDef__Group__0)
{ after(grammarAccess.getEnumTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumValue
entryRuleEnumValue 
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumValueAccess().getGroup()); }
(rule__EnumValue__Group__0)
{ after(grammarAccess.getEnumValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordTypeDef
entryRuleRecordTypeDef 
:
{ before(grammarAccess.getRecordTypeDefRule()); }
	 ruleRecordTypeDef
{ after(grammarAccess.getRecordTypeDefRule()); } 
	 EOF 
;

// Rule RecordTypeDef
ruleRecordTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordTypeDefAccess().getGroup()); }
(rule__RecordTypeDef__Group__0)
{ after(grammarAccess.getRecordTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayTypeDef
entryRuleArrayTypeDef 
:
{ before(grammarAccess.getArrayTypeDefRule()); }
	 ruleArrayTypeDef
{ after(grammarAccess.getArrayTypeDefRule()); } 
	 EOF 
;

// Rule ArrayTypeDef
ruleArrayTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayTypeDefAccess().getGroup()); }
(rule__ArrayTypeDef__Group__0)
{ after(grammarAccess.getArrayTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractTypeDef
entryRuleAbstractTypeDef 
:
{ before(grammarAccess.getAbstractTypeDefRule()); }
	 ruleAbstractTypeDef
{ after(grammarAccess.getAbstractTypeDefRule()); } 
	 EOF 
;

// Rule AbstractTypeDef
ruleAbstractTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractTypeDefAccess().getGroup()); }
(rule__AbstractTypeDef__Group__0)
{ after(grammarAccess.getAbstractTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordFieldType
entryRuleRecordFieldType 
:
{ before(grammarAccess.getRecordFieldTypeRule()); }
	 ruleRecordFieldType
{ after(grammarAccess.getRecordFieldTypeRule()); } 
	 EOF 
;

// Rule RecordFieldType
ruleRecordFieldType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordFieldTypeAccess().getGroup()); }
(rule__RecordFieldType__Group__0)
{ after(grammarAccess.getRecordFieldTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDeclaration
entryRuleConstantDeclaration 
:
{ before(grammarAccess.getConstantDeclarationRule()); }
	 ruleConstantDeclaration
{ after(grammarAccess.getConstantDeclarationRule()); } 
	 EOF 
;

// Rule ConstantDeclaration
ruleConstantDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup()); }
(rule__ConstantDeclaration__Group__0)
{ after(grammarAccess.getConstantDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalDeclaration
entryRuleGlobalDeclaration 
:
{ before(grammarAccess.getGlobalDeclarationRule()); }
	 ruleGlobalDeclaration
{ after(grammarAccess.getGlobalDeclarationRule()); } 
	 EOF 
;

// Rule GlobalDeclaration
ruleGlobalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getGroup()); }
(rule__GlobalDeclaration__Group__0)
{ after(grammarAccess.getGlobalDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleInputArgList
entryRuleInputArgList 
:
{ before(grammarAccess.getInputArgListRule()); }
	 ruleInputArgList
{ after(grammarAccess.getInputArgListRule()); } 
	 EOF 
;

// Rule InputArgList
ruleInputArgList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputArgListAccess().getGroup()); }
(rule__InputArgList__Group__0)
{ after(grammarAccess.getInputArgListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputArg
entryRuleInputArg 
:
{ before(grammarAccess.getInputArgRule()); }
	 ruleInputArg
{ after(grammarAccess.getInputArgRule()); } 
	 EOF 
;

// Rule InputArg
ruleInputArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputArgAccess().getGroup()); }
(rule__InputArg__Group__0)
{ after(grammarAccess.getInputArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalArg
entryRuleLocalArg 
:
{ before(grammarAccess.getLocalArgRule()); }
	 ruleLocalArg
{ after(grammarAccess.getLocalArgRule()); } 
	 EOF 
;

// Rule LocalArg
ruleLocalArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalArgAccess().getGroup()); }
(rule__LocalArg__Group__0)
{ after(grammarAccess.getLocalArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputArgList
entryRuleOutputArgList 
:
{ before(grammarAccess.getOutputArgListRule()); }
	 ruleOutputArgList
{ after(grammarAccess.getOutputArgListRule()); } 
	 EOF 
;

// Rule OutputArgList
ruleOutputArgList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputArgListAccess().getGroup()); }
(rule__OutputArgList__Group__0)
{ after(grammarAccess.getOutputArgListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputArg
entryRuleOutputArg 
:
{ before(grammarAccess.getOutputArgRule()); }
	 ruleOutputArg
{ after(grammarAccess.getOutputArgRule()); } 
	 EOF 
;

// Rule OutputArg
ruleOutputArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputArgAccess().getGroup()); }
(rule__OutputArg__Group__0)
{ after(grammarAccess.getOutputArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeBlock
entryRuleAttributeBlock 
:
{ before(grammarAccess.getAttributeBlockRule()); }
	 ruleAttributeBlock
{ after(grammarAccess.getAttributeBlockRule()); } 
	 EOF 
;

// Rule AttributeBlock
ruleAttributeBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeBlockAccess().getAlternatives()); }
(rule__AttributeBlock__Alternatives)
{ after(grammarAccess.getAttributeBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
(rule__Attribute__Alternatives)
{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrecondition
entryRulePrecondition 
:
{ before(grammarAccess.getPreconditionRule()); }
	 rulePrecondition
{ after(grammarAccess.getPreconditionRule()); } 
	 EOF 
;

// Rule Precondition
rulePrecondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreconditionAccess().getGroup()); }
(rule__Precondition__Group__0)
{ after(grammarAccess.getPreconditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostcondition
entryRulePostcondition 
:
{ before(grammarAccess.getPostconditionRule()); }
	 rulePostcondition
{ after(grammarAccess.getPostconditionRule()); } 
	 EOF 
;

// Rule Postcondition
rulePostcondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostconditionAccess().getGroup()); }
(rule__Postcondition__Group__0)
{ after(grammarAccess.getPostconditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefineUseRef
entryRuleDefineUseRef 
:
{ before(grammarAccess.getDefineUseRefRule()); }
	 ruleDefineUseRef
{ after(grammarAccess.getDefineUseRefRule()); } 
	 EOF 
;

// Rule DefineUseRef
ruleDefineUseRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineUseRefAccess().getReferenceExprAssignment()); }
(rule__DefineUseRef__ReferenceExprAssignment)
{ after(grammarAccess.getDefineUseRefAccess().getReferenceExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefine
entryRuleDefine 
:
{ before(grammarAccess.getDefineRule()); }
	 ruleDefine
{ after(grammarAccess.getDefineRule()); } 
	 EOF 
;

// Rule Define
ruleDefine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineAccess().getGroup()); }
(rule__Define__Group__0)
{ after(grammarAccess.getDefineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUses
entryRuleUses 
:
{ before(grammarAccess.getUsesRule()); }
	 ruleUses
{ after(grammarAccess.getUsesRule()); } 
	 EOF 
;

// Rule Uses
ruleUses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesAccess().getGroup()); }
(rule__Uses__Group__0)
{ after(grammarAccess.getUsesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementBlock
entryRuleStatementBlock 
:
{ before(grammarAccess.getStatementBlockRule()); }
	 ruleStatementBlock
{ after(grammarAccess.getStatementBlockRule()); } 
	 EOF 
;

// Rule StatementBlock
ruleStatementBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementBlockAccess().getGroup()); }
(rule__StatementBlock__Group__0)
{ after(grammarAccess.getStatementBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVoidStatement
entryRuleVoidStatement 
:
{ before(grammarAccess.getVoidStatementRule()); }
	 ruleVoidStatement
{ after(grammarAccess.getVoidStatementRule()); } 
	 EOF 
;

// Rule VoidStatement
ruleVoidStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVoidStatementAccess().getGroup()); }
(rule__VoidStatement__Group__0)
{ after(grammarAccess.getVoidStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentStatement
entryRuleAssignmentStatement 
:
{ before(grammarAccess.getAssignmentStatementRule()); }
	 ruleAssignmentStatement
{ after(grammarAccess.getAssignmentStatementRule()); } 
	 EOF 
;

// Rule AssignmentStatement
ruleAssignmentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentStatementAccess().getGroup()); }
(rule__AssignmentStatement__Group__0)
{ after(grammarAccess.getAssignmentStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfThenElseStatement
entryRuleIfThenElseStatement 
:
{ before(grammarAccess.getIfThenElseStatementRule()); }
	 ruleIfThenElseStatement
{ after(grammarAccess.getIfThenElseStatementRule()); } 
	 EOF 
;

// Rule IfThenElseStatement
ruleIfThenElseStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getGroup()); }
(rule__IfThenElseStatement__Group__0)
{ after(grammarAccess.getIfThenElseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElse
entryRuleElse 
:
{ before(grammarAccess.getElseRule()); }
	 ruleElse
{ after(grammarAccess.getElseRule()); } 
	 EOF 
;

// Rule Else
ruleElse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElseAccess().getAlternatives()); }
(rule__Else__Alternatives)
{ after(grammarAccess.getElseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabelStatement
entryRuleLabelStatement 
:
{ before(grammarAccess.getLabelStatementRule()); }
	 ruleLabelStatement
{ after(grammarAccess.getLabelStatementRule()); } 
	 EOF 
;

// Rule LabelStatement
ruleLabelStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelStatementAccess().getGroup()); }
(rule__LabelStatement__Group__0)
{ after(grammarAccess.getLabelStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGotoStatement
entryRuleGotoStatement 
:
{ before(grammarAccess.getGotoStatementRule()); }
	 ruleGotoStatement
{ after(grammarAccess.getGotoStatementRule()); } 
	 EOF 
;

// Rule GotoStatement
ruleGotoStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGotoStatementAccess().getGroup()); }
(rule__GotoStatement__Group__0)
{ after(grammarAccess.getGotoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquationBlock
entryRuleEquationBlock 
:
{ before(grammarAccess.getEquationBlockRule()); }
	 ruleEquationBlock
{ after(grammarAccess.getEquationBlockRule()); } 
	 EOF 
;

// Rule EquationBlock
ruleEquationBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationBlockAccess().getGroup()); }
(rule__EquationBlock__Group__0)
{ after(grammarAccess.getEquationBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquation
entryRuleEquation 
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationAccess().getAlternatives()); }
(rule__Equation__Alternatives)
{ after(grammarAccess.getEquationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdList
entryRuleIdList 
:
{ before(grammarAccess.getIdListRule()); }
	 ruleIdList
{ after(grammarAccess.getIdListRule()); } 
	 EOF 
;

// Rule IdList
ruleIdList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdListAccess().getGroup()); }
(rule__IdList__Group__0)
{ after(grammarAccess.getIdListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getIfThenElseExprParserRuleCall()); }
	ruleIfThenElseExpr
{ after(grammarAccess.getExprAccess().getIfThenElseExprParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfThenElseExpr
entryRuleIfThenElseExpr 
:
{ before(grammarAccess.getIfThenElseExprRule()); }
	 ruleIfThenElseExpr
{ after(grammarAccess.getIfThenElseExprRule()); } 
	 EOF 
;

// Rule IfThenElseExpr
ruleIfThenElseExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfThenElseExprAccess().getGroup()); }
(rule__IfThenElseExpr__Group__0)
{ after(grammarAccess.getIfThenElseExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoiceExpr
entryRuleChoiceExpr 
:
{ before(grammarAccess.getChoiceExprRule()); }
	 ruleChoiceExpr
{ after(grammarAccess.getChoiceExprRule()); } 
	 EOF 
;

// Rule ChoiceExpr
ruleChoiceExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoiceExprAccess().getAlternatives()); }
(rule__ChoiceExpr__Alternatives)
{ after(grammarAccess.getChoiceExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImpliesExpr
entryRuleImpliesExpr 
:
{ before(grammarAccess.getImpliesExprRule()); }
	 ruleImpliesExpr
{ after(grammarAccess.getImpliesExprRule()); } 
	 EOF 
;

// Rule ImpliesExpr
ruleImpliesExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup()); }
(rule__ImpliesExpr__Group__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpr
entryRuleOrExpr 
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExprAccess().getGroup()); }
(rule__OrExpr__Group__0)
{ after(grammarAccess.getOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpr
entryRuleAndExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalOp
entryRuleRelationalOp 
:
{ before(grammarAccess.getRelationalOpRule()); }
	 ruleRelationalOp
{ after(grammarAccess.getRelationalOpRule()); } 
	 EOF 
;

// Rule RelationalOp
ruleRelationalOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalOpAccess().getAlternatives()); }
(rule__RelationalOp__Alternatives)
{ after(grammarAccess.getRelationalOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpr
entryRuleRelationalExpr 
:
{ before(grammarAccess.getRelationalExprRule()); }
	 ruleRelationalExpr
{ after(grammarAccess.getRelationalExprRule()); } 
	 EOF 
;

// Rule RelationalExpr
ruleRelationalExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup()); }
(rule__RelationalExpr__Group__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusExpr
entryRulePlusExpr 
:
{ before(grammarAccess.getPlusExprRule()); }
	 rulePlusExpr
{ after(grammarAccess.getPlusExprRule()); } 
	 EOF 
;

// Rule PlusExpr
rulePlusExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlusExprAccess().getGroup()); }
(rule__PlusExpr__Group__0)
{ after(grammarAccess.getPlusExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultExpr
entryRuleMultExpr 
:
{ before(grammarAccess.getMultExprRule()); }
	 ruleMultExpr
{ after(grammarAccess.getMultExprRule()); } 
	 EOF 
;

// Rule MultExpr
ruleMultExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultExprAccess().getGroup()); }
(rule__MultExpr__Group__0)
{ after(grammarAccess.getMultExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr 
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
(rule__UnaryExpr__Alternatives)
{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessExpr
entryRuleAccessExpr 
:
{ before(grammarAccess.getAccessExprRule()); }
	 ruleAccessExpr
{ after(grammarAccess.getAccessExprRule()); } 
	 EOF 
;

// Rule AccessExpr
ruleAccessExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessExprAccess().getGroup()); }
(rule__AccessExpr__Group__0)
{ after(grammarAccess.getAccessExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTerminalExpr
entryRuleTerminalExpr 
:
{ before(grammarAccess.getTerminalExprRule()); }
	 ruleTerminalExpr
{ after(grammarAccess.getTerminalExprRule()); } 
	 EOF 
;

// Rule TerminalExpr
ruleTerminalExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExprAccess().getAlternatives()); }
(rule__TerminalExpr__Alternatives)
{ after(grammarAccess.getTerminalExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayExpr
entryRuleArrayExpr 
:
{ before(grammarAccess.getArrayExprRule()); }
	 ruleArrayExpr
{ after(grammarAccess.getArrayExprRule()); } 
	 EOF 
;

// Rule ArrayExpr
ruleArrayExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayExprAccess().getGroup()); }
(rule__ArrayExpr__Group__0)
{ after(grammarAccess.getArrayExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordExpr
entryRuleRecordExpr 
:
{ before(grammarAccess.getRecordExprRule()); }
	 ruleRecordExpr
{ after(grammarAccess.getRecordExprRule()); } 
	 EOF 
;

// Rule RecordExpr
ruleRecordExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordExprAccess().getGroup()); }
(rule__RecordExpr__Group__0)
{ after(grammarAccess.getRecordExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordFieldExpr
entryRuleRecordFieldExpr 
:
{ before(grammarAccess.getRecordFieldExprRule()); }
	 ruleRecordFieldExpr
{ after(grammarAccess.getRecordFieldExprRule()); } 
	 EOF 
;

// Rule RecordFieldExpr
ruleRecordFieldExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordFieldExprAccess().getGroup()); }
(rule__RecordFieldExpr__Group__0)
{ after(grammarAccess.getRecordFieldExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprList
entryRuleExprList 
:
{ before(grammarAccess.getExprListRule()); }
	 ruleExprList
{ after(grammarAccess.getExprListRule()); } 
	 EOF 
;

// Rule ExprList
ruleExprList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprListAccess().getGroup()); }
(rule__ExprList__Group__0)
{ after(grammarAccess.getExprListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getImportParserRuleCall_0()); }
	ruleImport
{ after(grammarAccess.getDeclarationAccess().getImportParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getCommentParserRuleCall_1()); }
	ruleComment
{ after(grammarAccess.getDeclarationAccess().getCommentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getExternalFunctionParserRuleCall_2()); }
	ruleExternalFunction
{ after(grammarAccess.getDeclarationAccess().getExternalFunctionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getExternalProcedureParserRuleCall_3()); }
	ruleExternalProcedure
{ after(grammarAccess.getDeclarationAccess().getExternalProcedureParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getLocalFunctionParserRuleCall_4()); }
	ruleLocalFunction
{ after(grammarAccess.getDeclarationAccess().getLocalFunctionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getLocalProcedureParserRuleCall_5()); }
	ruleLocalProcedure
{ after(grammarAccess.getDeclarationAccess().getLocalProcedureParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getConstantDeclarationParserRuleCall_6()); }
	ruleConstantDeclaration
{ after(grammarAccess.getDeclarationAccess().getConstantDeclarationParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGlobalDeclarationParserRuleCall_7()); }
	ruleGlobalDeclaration
{ after(grammarAccess.getDeclarationAccess().getGlobalDeclarationParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getTypeDeclarationParserRuleCall_8()); }
	ruleTypeDeclaration
{ after(grammarAccess.getDeclarationAccess().getTypeDeclarationParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getGroup_0()); }
(rule__TypeDeclaration__Group_0__0)
{ after(grammarAccess.getTypeDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getEnumTypeDefParserRuleCall_1()); }
	ruleEnumTypeDef
{ after(grammarAccess.getTypeDeclarationAccess().getEnumTypeDefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getRecordTypeDefParserRuleCall_2()); }
	ruleRecordTypeDef
{ after(grammarAccess.getTypeDeclarationAccess().getRecordTypeDefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getArrayTypeDefParserRuleCall_3()); }
	ruleArrayTypeDef
{ after(grammarAccess.getTypeDeclarationAccess().getArrayTypeDefParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getAbstractTypeDefParserRuleCall_4()); }
	ruleAbstractTypeDef
{ after(grammarAccess.getTypeDeclarationAccess().getAbstractTypeDefParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getGroup_0()); }
(rule__VarBlock__Group_0__0)
{ after(grammarAccess.getVarBlockAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVarBlockAccess().getNoVarBlockAction_1()); }
(

)
{ after(grammarAccess.getVarBlockAccess().getNoVarBlockAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_0()); }
(rule__Type__Group_0__0)
{ after(grammarAccess.getTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_2()); }
(rule__Type__Group_2__0)
{ after(grammarAccess.getTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_3()); }
(rule__Type__Group_3__0)
{ after(grammarAccess.getTypeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_4()); }
(rule__Type__Group_4__0)
{ after(grammarAccess.getTypeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_5()); }
(rule__Type__Group_5__0)
{ after(grammarAccess.getTypeAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_6()); }
(rule__Type__Group_6__0)
{ after(grammarAccess.getTypeAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_7()); }
(rule__Type__Group_7__0)
{ after(grammarAccess.getTypeAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_8()); }
(rule__Type__Group_8__0)
{ after(grammarAccess.getTypeAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_9()); }
(rule__Type__Group_9__0)
{ after(grammarAccess.getTypeAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBlockAccess().getGroup_0()); }
(rule__AttributeBlock__Group_0__0)
{ after(grammarAccess.getAttributeBlockAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAttributeBlockAccess().getNoAttributeBlockAction_1()); }
(

)
{ after(grammarAccess.getAttributeBlockAccess().getNoAttributeBlockAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getPreconditionParserRuleCall_0()); }
	rulePrecondition
{ after(grammarAccess.getAttributeAccess().getPreconditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getPostconditionParserRuleCall_1()); }
	rulePostcondition
{ after(grammarAccess.getAttributeAccess().getPostconditionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getDefineParserRuleCall_2()); }
	ruleDefine
{ after(grammarAccess.getAttributeAccess().getDefineParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getUsesParserRuleCall_3()); }
	ruleUses
{ after(grammarAccess.getAttributeAccess().getUsesParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVoidStatementParserRuleCall_0()); }
	ruleVoidStatement
{ after(grammarAccess.getStatementAccess().getVoidStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_1()); }
	ruleAssignmentStatement
{ after(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfThenElseStatementParserRuleCall_2()); }
	ruleIfThenElseStatement
{ after(grammarAccess.getStatementAccess().getIfThenElseStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_3()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4()); }
	ruleForStatement
{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGotoStatementParserRuleCall_5()); }
	ruleGotoStatement
{ after(grammarAccess.getStatementAccess().getGotoStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLabelStatementParserRuleCall_6()); }
	ruleLabelStatement
{ after(grammarAccess.getStatementAccess().getLabelStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_7()); }
(rule__Statement__Group_7__0)
{ after(grammarAccess.getStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_8()); }
(rule__Statement__Group_8__0)
{ after(grammarAccess.getStatementAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_9()); }
(rule__Statement__Group_9__0)
{ after(grammarAccess.getStatementAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getGroup_0()); }
(rule__Else__Group_0__0)
{ after(grammarAccess.getElseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getElseAccess().getGroup_1()); }
(rule__Else__Group_1__0)
{ after(grammarAccess.getElseAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getElseAccess().getNoElseAction_2()); }
(

)
{ after(grammarAccess.getElseAccess().getNoElseAction_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getVoidStatementParserRuleCall_0()); }
	ruleVoidStatement
{ after(grammarAccess.getEquationAccess().getVoidStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEquationAccess().getAssignmentStatementParserRuleCall_1()); }
	ruleAssignmentStatement
{ after(grammarAccess.getEquationAccess().getAssignmentStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getGroup_0()); }
(rule__ChoiceExpr__Group_0__0)
{ after(grammarAccess.getChoiceExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getChoiceExprAccess().getImpliesExprParserRuleCall_1()); }
	ruleImpliesExpr
{ after(grammarAccess.getChoiceExprAccess().getImpliesExprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_1()); }

	'<=' 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }

	'>=' 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getEqualsSignEqualsSignKeyword_4()); }

	'==' 

{ after(grammarAccess.getRelationalOpAccess().getEqualsSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }

	'<>' 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__OpAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }

	'+' 

{ after(grammarAccess.getPlusExprAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getPlusExprAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getPlusExprAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__OpAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultExprAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultExprAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultExprAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getAccessExprParserRuleCall_0()); }
	ruleAccessExpr
{ after(grammarAccess.getUnaryExprAccess().getAccessExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
(rule__UnaryExpr__Group_1__0)
{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnaryExprAccess().getGroup_2()); }
(rule__UnaryExpr__Group_2__0)
{ after(grammarAccess.getUnaryExprAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_0()); }
(rule__AccessExpr__Group_1_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_1()); }
(rule__AccessExpr__Group_1_1__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_2()); }
(rule__AccessExpr__Group_1_2__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getGroup_0()); }
(rule__TerminalExpr__Group_0__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_1()); }
(rule__TerminalExpr__Group_1__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_2()); }
(rule__TerminalExpr__Group_2__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_3()); }
(rule__TerminalExpr__Group_3__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_4()); }
(rule__TerminalExpr__Group_4__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_5()); }
(rule__TerminalExpr__Group_5__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_6()); }
(rule__TerminalExpr__Group_6__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_7()); }
(rule__TerminalExpr__Group_7__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getArrayExprParserRuleCall_8()); }
	ruleArrayExpr
{ after(grammarAccess.getTerminalExprAccess().getArrayExprParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getRecordExprParserRuleCall_9()); }
	ruleRecordExpr
{ after(grammarAccess.getTerminalExprAccess().getRecordExprParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_10()); }
(rule__TerminalExpr__Group_10__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_11()); }
(rule__TerminalExpr__Group_11__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExternalFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__0__Impl
	rule__ExternalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getExternalFunctionAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__1__Impl
	rule__ExternalFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getFunctionKeyword_1()); }

	'function' 

{ after(grammarAccess.getExternalFunctionAccess().getFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__2__Impl
	rule__ExternalFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getNameAssignment_2()); }
(rule__ExternalFunction__NameAssignment_2)
{ after(grammarAccess.getExternalFunctionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__3__Impl
	rule__ExternalFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getExternalFunctionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__4__Impl
	rule__ExternalFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getInputsAssignment_4()); }
(rule__ExternalFunction__InputsAssignment_4)
{ after(grammarAccess.getExternalFunctionAccess().getInputsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__5__Impl
	rule__ExternalFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExternalFunctionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__6__Impl
	rule__ExternalFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getReturnsKeyword_6()); }

	'returns' 

{ after(grammarAccess.getExternalFunctionAccess().getReturnsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__7__Impl
	rule__ExternalFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getExternalFunctionAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__8__Impl
	rule__ExternalFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getOutputAssignment_8()); }
(rule__ExternalFunction__OutputAssignment_8)
{ after(grammarAccess.getExternalFunctionAccess().getOutputAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalFunction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getExternalFunctionAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__ExternalProcedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__0__Impl
	rule__ExternalProcedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getExternalProcedureAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__1__Impl
	rule__ExternalProcedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getProcedureKeyword_1()); }

	'procedure' 

{ after(grammarAccess.getExternalProcedureAccess().getProcedureKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__2__Impl
	rule__ExternalProcedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getNameAssignment_2()); }
(rule__ExternalProcedure__NameAssignment_2)
{ after(grammarAccess.getExternalProcedureAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__3__Impl
	rule__ExternalProcedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getExternalProcedureAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__4__Impl
	rule__ExternalProcedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getInputsAssignment_4()); }
(rule__ExternalProcedure__InputsAssignment_4)
{ after(grammarAccess.getExternalProcedureAccess().getInputsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__5__Impl
	rule__ExternalProcedure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExternalProcedureAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__6__Impl
	rule__ExternalProcedure__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getReturnsKeyword_6()); }

	'returns' 

{ after(grammarAccess.getExternalProcedureAccess().getReturnsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__7__Impl
	rule__ExternalProcedure__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getExternalProcedureAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__8__Impl
	rule__ExternalProcedure__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getOutputsAssignment_8()); }
(rule__ExternalProcedure__OutputsAssignment_8)
{ after(grammarAccess.getExternalProcedureAccess().getOutputsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__9__Impl
	rule__ExternalProcedure__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getExternalProcedureAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalProcedure__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalProcedure__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getAttributeBlockAssignment_10()); }
(rule__ExternalProcedure__AttributeBlockAssignment_10)
{ after(grammarAccess.getExternalProcedureAccess().getAttributeBlockAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__LocalFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__0__Impl
	rule__LocalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getLocalFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__1__Impl
	rule__LocalFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getNameAssignment_1()); }
(rule__LocalFunction__NameAssignment_1)
{ after(grammarAccess.getLocalFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__2__Impl
	rule__LocalFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getLocalFunctionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__3__Impl
	rule__LocalFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getInputsAssignment_3()); }
(rule__LocalFunction__InputsAssignment_3)
{ after(grammarAccess.getLocalFunctionAccess().getInputsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__4__Impl
	rule__LocalFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getLocalFunctionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__5__Impl
	rule__LocalFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getReturnsKeyword_5()); }

	'returns' 

{ after(grammarAccess.getLocalFunctionAccess().getReturnsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__6__Impl
	rule__LocalFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getLocalFunctionAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__7__Impl
	rule__LocalFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getOutputAssignment_7()); }
(rule__LocalFunction__OutputAssignment_7)
{ after(grammarAccess.getLocalFunctionAccess().getOutputAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__8__Impl
	rule__LocalFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getLocalFunctionAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__9__Impl
	rule__LocalFunction__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getVarBlockAssignment_9()); }
(rule__LocalFunction__VarBlockAssignment_9)
{ after(grammarAccess.getLocalFunctionAccess().getVarBlockAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__10__Impl
	rule__LocalFunction__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getEquationsKeyword_10()); }

	'equations' 

{ after(grammarAccess.getLocalFunctionAccess().getEquationsKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalFunction__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getEquationBlockAssignment_11()); }
(rule__LocalFunction__EquationBlockAssignment_11)
{ after(grammarAccess.getLocalFunctionAccess().getEquationBlockAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__LocalProcedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__0__Impl
	rule__LocalProcedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getProcedureKeyword_0()); }

	'procedure' 

{ after(grammarAccess.getLocalProcedureAccess().getProcedureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__1__Impl
	rule__LocalProcedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getNameAssignment_1()); }
(rule__LocalProcedure__NameAssignment_1)
{ after(grammarAccess.getLocalProcedureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__2__Impl
	rule__LocalProcedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getLocalProcedureAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__3__Impl
	rule__LocalProcedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getInputsAssignment_3()); }
(rule__LocalProcedure__InputsAssignment_3)
{ after(grammarAccess.getLocalProcedureAccess().getInputsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__4__Impl
	rule__LocalProcedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getLocalProcedureAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__5__Impl
	rule__LocalProcedure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getReturnsKeyword_5()); }

	'returns' 

{ after(grammarAccess.getLocalProcedureAccess().getReturnsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__6__Impl
	rule__LocalProcedure__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getLocalProcedureAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__7__Impl
	rule__LocalProcedure__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getOutputsAssignment_7()); }
(rule__LocalProcedure__OutputsAssignment_7)
{ after(grammarAccess.getLocalProcedureAccess().getOutputsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__8__Impl
	rule__LocalProcedure__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getLocalProcedureAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__9__Impl
	rule__LocalProcedure__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getVarBlockAssignment_9()); }
(rule__LocalProcedure__VarBlockAssignment_9)
{ after(grammarAccess.getLocalProcedureAccess().getVarBlockAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__10__Impl
	rule__LocalProcedure__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getAttributeBlockAssignment_10()); }
(rule__LocalProcedure__AttributeBlockAssignment_10)
{ after(grammarAccess.getLocalProcedureAccess().getAttributeBlockAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__11__Impl
	rule__LocalProcedure__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getStatementsKeyword_11()); }

	'statements' 

{ after(grammarAccess.getLocalProcedureAccess().getStatementsKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalProcedure__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalProcedure__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getStatementblockAssignment_12()); }
(rule__LocalProcedure__StatementblockAssignment_12)
{ after(grammarAccess.getLocalProcedureAccess().getStatementblockAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__TypeDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_0__0__Impl
	rule__TypeDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeAliasAction_0_0()); }
(

)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeAliasAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_0__1__Impl
	rule__TypeDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_0_1()); }

	'type' 

{ after(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_0__2__Impl
	rule__TypeDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getNameAssignment_0_2()); }
(rule__TypeDeclaration__NameAssignment_0_2)
{ after(grammarAccess.getTypeDeclarationAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_0__3__Impl
	rule__TypeDeclaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getEqualsSignKeyword_0_3()); }

	'=' 

{ after(grammarAccess.getTypeDeclarationAccess().getEqualsSignKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_0_4()); }
(rule__TypeDeclaration__TypeAssignment_0_4)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VarBlock__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group_0__0__Impl
	rule__VarBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getSomeVarBlockAction_0_0()); }
(

)
{ after(grammarAccess.getVarBlockAccess().getSomeVarBlockAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBlock__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group_0__1__Impl
	rule__VarBlock__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getVarKeyword_0_1()); }

	'var' 

{ after(grammarAccess.getVarBlockAccess().getVarKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBlock__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group_0__2__Impl
	rule__VarBlock__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getLeftCurlyBracketKeyword_0_2()); }

	'{' 

{ after(grammarAccess.getVarBlockAccess().getLeftCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBlock__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group_0__3__Impl
	rule__VarBlock__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getLocalsAssignment_0_3()); }
(rule__VarBlock__LocalsAssignment_0_3)*
{ after(grammarAccess.getVarBlockAccess().getLocalsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBlock__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getRightCurlyBracketKeyword_0_4()); }

	'}' 

{ after(grammarAccess.getVarBlockAccess().getRightCurlyBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__0__Impl
	rule__EnumTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getEnumTypeDefAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__1__Impl
	rule__EnumTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getEnumKeyword_1()); }

	'enum' 

{ after(grammarAccess.getEnumTypeDefAccess().getEnumKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__2__Impl
	rule__EnumTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getNameAssignment_2()); }
(rule__EnumTypeDef__NameAssignment_2)
{ after(grammarAccess.getEnumTypeDefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__3__Impl
	rule__EnumTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getEnumTypeDefAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__4__Impl
	rule__EnumTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEnumTypeDefAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__5__Impl
	rule__EnumTypeDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getEnumerationsAssignment_5()); }
(rule__EnumTypeDef__EnumerationsAssignment_5)
{ after(grammarAccess.getEnumTypeDefAccess().getEnumerationsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__6__Impl
	rule__EnumTypeDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getGroup_6()); }
(rule__EnumTypeDef__Group_6__0)*
{ after(grammarAccess.getEnumTypeDefAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getEnumTypeDefAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__EnumTypeDef__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group_6__0__Impl
	rule__EnumTypeDef__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getEnumTypeDefAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDef__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDef__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getEnumerationsAssignment_6_1()); }
(rule__EnumTypeDef__EnumerationsAssignment_6_1)
{ after(grammarAccess.getEnumTypeDefAccess().getEnumerationsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumValue__Group__0__Impl
	rule__EnumValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getEnumValueAction_0()); }
(

)
{ after(grammarAccess.getEnumValueAccess().getEnumValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getNameAssignment_1()); }
(rule__EnumValue__NameAssignment_1)
{ after(grammarAccess.getEnumValueAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__0__Impl
	rule__RecordTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getRecordTypeDefAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__1__Impl
	rule__RecordTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getRecordKeyword_1()); }

	'record' 

{ after(grammarAccess.getRecordTypeDefAccess().getRecordKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__2__Impl
	rule__RecordTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getNameAssignment_2()); }
(rule__RecordTypeDef__NameAssignment_2)
{ after(grammarAccess.getRecordTypeDefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__3__Impl
	rule__RecordTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getRecordTypeDefAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__4__Impl
	rule__RecordTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getRecordTypeDefAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__5__Impl
	rule__RecordTypeDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getFieldsAssignment_5()); }
(rule__RecordTypeDef__FieldsAssignment_5)
{ after(grammarAccess.getRecordTypeDefAccess().getFieldsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__6__Impl
	rule__RecordTypeDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getGroup_6()); }
(rule__RecordTypeDef__Group_6__0)*
{ after(grammarAccess.getRecordTypeDefAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getRecordTypeDefAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__RecordTypeDef__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group_6__0__Impl
	rule__RecordTypeDef__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getRecordTypeDefAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTypeDef__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTypeDef__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getFieldsAssignment_6_1()); }
(rule__RecordTypeDef__FieldsAssignment_6_1)
{ after(grammarAccess.getRecordTypeDefAccess().getFieldsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__0__Impl
	rule__ArrayTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getArrayTypeDefAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__1__Impl
	rule__ArrayTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getArrayKeyword_1()); }

	'array' 

{ after(grammarAccess.getArrayTypeDefAccess().getArrayKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__2__Impl
	rule__ArrayTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getNameAssignment_2()); }
(rule__ArrayTypeDef__NameAssignment_2)
{ after(grammarAccess.getArrayTypeDefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__3__Impl
	rule__ArrayTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getArrayTypeDefAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__4__Impl
	rule__ArrayTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getBaseTypeAssignment_4()); }
(rule__ArrayTypeDef__BaseTypeAssignment_4)
{ after(grammarAccess.getArrayTypeDefAccess().getBaseTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__5__Impl
	rule__ArrayTypeDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getLeftSquareBracketKeyword_5()); }

	'[' 

{ after(grammarAccess.getArrayTypeDefAccess().getLeftSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__6__Impl
	rule__ArrayTypeDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getSizeAssignment_6()); }
(rule__ArrayTypeDef__SizeAssignment_6)
{ after(grammarAccess.getArrayTypeDefAccess().getSizeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getRightSquareBracketKeyword_7()); }

	']' 

{ after(grammarAccess.getArrayTypeDefAccess().getRightSquareBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__AbstractTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractTypeDef__Group__0__Impl
	rule__AbstractTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractTypeDefAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getAbstractTypeDefAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractTypeDef__Group__1__Impl
	rule__AbstractTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractTypeDefAccess().getAbstractKeyword_1()); }

	'abstract' 

{ after(grammarAccess.getAbstractTypeDefAccess().getAbstractKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractTypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractTypeDefAccess().getNameAssignment_2()); }
(rule__AbstractTypeDef__NameAssignment_2)
{ after(grammarAccess.getAbstractTypeDefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordFieldType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldType__Group__0__Impl
	rule__RecordFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldTypeAccess().getFieldNameAssignment_0()); }
(rule__RecordFieldType__FieldNameAssignment_0)
{ after(grammarAccess.getRecordFieldTypeAccess().getFieldNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldType__Group__1__Impl
	rule__RecordFieldType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldTypeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getRecordFieldTypeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldTypeAccess().getFieldTypeAssignment_2()); }
(rule__RecordFieldType__FieldTypeAssignment_2)
{ after(grammarAccess.getRecordFieldTypeAccess().getFieldTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__0__Impl
	rule__ConstantDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstantKeyword_0()); }

	'constant' 

{ after(grammarAccess.getConstantDeclarationAccess().getConstantKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__1__Impl
	rule__ConstantDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getNameAssignment_1()); }
(rule__ConstantDeclaration__NameAssignment_1)
{ after(grammarAccess.getConstantDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__2__Impl
	rule__ConstantDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getConstantDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__3__Impl
	rule__ConstantDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_3()); }
(rule__ConstantDeclaration__TypeAssignment_3)
{ after(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup_4()); }
(rule__ConstantDeclaration__Group_4__0)?
{ after(grammarAccess.getConstantDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstantDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group_4__0__Impl
	rule__ConstantDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getEqualsSignKeyword_4_0()); }

	'=' 

{ after(grammarAccess.getConstantDeclarationAccess().getEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getExprAssignment_4_1()); }
(rule__ConstantDeclaration__ExprAssignment_4_1)
{ after(grammarAccess.getConstantDeclarationAccess().getExprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GlobalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__0__Impl
	rule__GlobalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getGlobalKeyword_0()); }

	'global' 

{ after(grammarAccess.getGlobalDeclarationAccess().getGlobalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__1__Impl
	rule__GlobalDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getNameAssignment_1()); }
(rule__GlobalDeclaration__NameAssignment_1)
{ after(grammarAccess.getGlobalDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__2__Impl
	rule__GlobalDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getGlobalDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getTypeAssignment_3()); }
(rule__GlobalDeclaration__TypeAssignment_3)
{ after(grammarAccess.getGlobalDeclarationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InputArgList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArgList__Group__0__Impl
	rule__InputArgList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getInputArgListAction_0()); }
(

)
{ after(grammarAccess.getInputArgListAccess().getInputArgListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArgList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArgList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getGroup_1()); }
(rule__InputArgList__Group_1__0)?
{ after(grammarAccess.getInputArgListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputArgList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArgList__Group_1__0__Impl
	rule__InputArgList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getInputArgsAssignment_1_0()); }
(rule__InputArgList__InputArgsAssignment_1_0)
{ after(grammarAccess.getInputArgListAccess().getInputArgsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArgList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArgList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getGroup_1_1()); }
(rule__InputArgList__Group_1_1__0)*
{ after(grammarAccess.getInputArgListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputArgList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArgList__Group_1_1__0__Impl
	rule__InputArgList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getInputArgListAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArgList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArgList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getInputArgsAssignment_1_1_1()); }
(rule__InputArgList__InputArgsAssignment_1_1_1)
{ after(grammarAccess.getInputArgListAccess().getInputArgsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputArg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArg__Group__0__Impl
	rule__InputArg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgAccess().getNameAssignment_0()); }
(rule__InputArg__NameAssignment_0)
{ after(grammarAccess.getInputArgAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArg__Group__1__Impl
	rule__InputArg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInputArgAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArg__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgAccess().getTypeAssignment_2()); }
(rule__InputArg__TypeAssignment_2)
{ after(grammarAccess.getInputArgAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalArg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalArg__Group__0__Impl
	rule__LocalArg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalArg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalArgAccess().getNameAssignment_0()); }
(rule__LocalArg__NameAssignment_0)
{ after(grammarAccess.getLocalArgAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalArg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalArg__Group__1__Impl
	rule__LocalArg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalArg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalArgAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getLocalArgAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalArg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalArg__Group__2__Impl
	rule__LocalArg__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalArg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalArgAccess().getTypeAssignment_2()); }
(rule__LocalArg__TypeAssignment_2)
{ after(grammarAccess.getLocalArgAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalArg__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalArg__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalArg__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalArgAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLocalArgAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OutputArgList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArgList__Group__0__Impl
	rule__OutputArgList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getOutputArgListAction_0()); }
(

)
{ after(grammarAccess.getOutputArgListAccess().getOutputArgListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArgList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArgList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getGroup_1()); }
(rule__OutputArgList__Group_1__0)?
{ after(grammarAccess.getOutputArgListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputArgList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArgList__Group_1__0__Impl
	rule__OutputArgList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getOutputArgsAssignment_1_0()); }
(rule__OutputArgList__OutputArgsAssignment_1_0)
{ after(grammarAccess.getOutputArgListAccess().getOutputArgsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArgList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArgList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getGroup_1_1()); }
(rule__OutputArgList__Group_1_1__0)*
{ after(grammarAccess.getOutputArgListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputArgList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArgList__Group_1_1__0__Impl
	rule__OutputArgList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getOutputArgListAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArgList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArgList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getOutputArgsAssignment_1_1_1()); }
(rule__OutputArgList__OutputArgsAssignment_1_1_1)
{ after(grammarAccess.getOutputArgListAccess().getOutputArgsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputArg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArg__Group__0__Impl
	rule__OutputArg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgAccess().getNameAssignment_0()); }
(rule__OutputArg__NameAssignment_0)
{ after(grammarAccess.getOutputArgAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArg__Group__1__Impl
	rule__OutputArg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getOutputArgAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArg__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgAccess().getTypeAssignment_2()); }
(rule__OutputArg__TypeAssignment_2)
{ after(grammarAccess.getOutputArgAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getVoidTypeAction_0_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getVoidTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getVoidKeyword_0_1()); }

	'void' 

{ after(grammarAccess.getTypeAccess().getVoidKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBoolTypeAction_1_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getBoolTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBoolKeyword_1_1()); }

	'bool' 

{ after(grammarAccess.getTypeAccess().getBoolKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getIntegerTypeAction_2_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getIntegerTypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getIntKeyword_2_1()); }

	'int' 

{ after(grammarAccess.getTypeAccess().getIntKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__0__Impl
	rule__Type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRealTypeAction_3_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getRealTypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRealKeyword_3_1()); }

	'real' 

{ after(grammarAccess.getTypeAccess().getRealKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__0__Impl
	rule__Type__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getStringTypeAction_4_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getStringTypeAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getStringKeyword_4_1()); }

	'string' 

{ after(grammarAccess.getTypeAccess().getStringKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__0__Impl
	rule__Type__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEnumTypeAction_5_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getEnumTypeAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__1__Impl
	rule__Type__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEnumKeyword_5_1()); }

	'enum' 

{ after(grammarAccess.getTypeAccess().getEnumKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEnumDefAssignment_5_2()); }
(rule__Type__EnumDefAssignment_5_2)
{ after(grammarAccess.getTypeAccess().getEnumDefAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__0__Impl
	rule__Type__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRecordTypeAction_6_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getRecordTypeAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__1__Impl
	rule__Type__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRecordKeyword_6_1()); }

	'record' 

{ after(grammarAccess.getTypeAccess().getRecordKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRecordDefAssignment_6_2()); }
(rule__Type__RecordDefAssignment_6_2)
{ after(grammarAccess.getTypeAccess().getRecordDefAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__0__Impl
	rule__Type__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArrayTypeAction_7_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getArrayTypeAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__1__Impl
	rule__Type__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArrayKeyword_7_1()); }

	'array' 

{ after(grammarAccess.getTypeAccess().getArrayKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArrayDefAssignment_7_2()); }
(rule__Type__ArrayDefAssignment_7_2)
{ after(grammarAccess.getTypeAccess().getArrayDefAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__0__Impl
	rule__Type__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAbstractTypeAction_8_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getAbstractTypeAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__1__Impl
	rule__Type__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAbstractKeyword_8_1()); }

	'abstract' 

{ after(grammarAccess.getTypeAccess().getAbstractKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAbstractDefAssignment_8_2()); }
(rule__Type__AbstractDefAssignment_8_2)
{ after(grammarAccess.getTypeAccess().getAbstractDefAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_9__0__Impl
	rule__Type__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNamedTypeAction_9_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getNamedTypeAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAliasAssignment_9_1()); }
(rule__Type__AliasAssignment_9_1)
{ after(grammarAccess.getTypeAccess().getAliasAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeBlock__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeBlock__Group_0__0__Impl
	rule__AttributeBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBlock__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBlockAccess().getSomeAttributeBlockAction_0_0()); }
(

)
{ after(grammarAccess.getAttributeBlockAccess().getSomeAttributeBlockAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeBlock__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeBlock__Group_0__1__Impl
	rule__AttributeBlock__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBlock__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBlockAccess().getAttributesKeyword_0_1()); }

	'attributes' 

{ after(grammarAccess.getAttributeBlockAccess().getAttributesKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeBlock__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeBlock__Group_0__2__Impl
	rule__AttributeBlock__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBlock__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBlockAccess().getLeftCurlyBracketKeyword_0_2()); }

	'{' 

{ after(grammarAccess.getAttributeBlockAccess().getLeftCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeBlock__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeBlock__Group_0__3__Impl
	rule__AttributeBlock__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBlock__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBlockAccess().getAttributeListAssignment_0_3()); }
(rule__AttributeBlock__AttributeListAssignment_0_3)*
{ after(grammarAccess.getAttributeBlockAccess().getAttributeListAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeBlock__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeBlock__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBlock__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBlockAccess().getRightCurlyBracketKeyword_0_4()); }

	'}' 

{ after(grammarAccess.getAttributeBlockAccess().getRightCurlyBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Precondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Precondition__Group__0__Impl
	rule__Precondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionAccess().getPreconditionKeyword_0()); }

	'precondition' 

{ after(grammarAccess.getPreconditionAccess().getPreconditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Precondition__Group__1__Impl
	rule__Precondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionAccess().getNameAssignment_1()); }
(rule__Precondition__NameAssignment_1)
{ after(grammarAccess.getPreconditionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Precondition__Group__2__Impl
	rule__Precondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getPreconditionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Precondition__Group__3__Impl
	rule__Precondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionAccess().getExprAssignment_3()); }
(rule__Precondition__ExprAssignment_3)
{ after(grammarAccess.getPreconditionAccess().getExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Precondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getPreconditionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Postcondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postcondition__Group__0__Impl
	rule__Postcondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionAccess().getPostconditionKeyword_0()); }

	'postcondition' 

{ after(grammarAccess.getPostconditionAccess().getPostconditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postcondition__Group__1__Impl
	rule__Postcondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionAccess().getNameAssignment_1()); }
(rule__Postcondition__NameAssignment_1)
{ after(grammarAccess.getPostconditionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postcondition__Group__2__Impl
	rule__Postcondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getPostconditionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postcondition__Group__3__Impl
	rule__Postcondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionAccess().getExprAssignment_3()); }
(rule__Postcondition__ExprAssignment_3)
{ after(grammarAccess.getPostconditionAccess().getExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postcondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getPostconditionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Define__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group__0__Impl
	rule__Define__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getDefinesKeyword_0()); }

	'defines' 

{ after(grammarAccess.getDefineAccess().getDefinesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group__1__Impl
	rule__Define__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getElementsAssignment_1()); }
(rule__Define__ElementsAssignment_1)
{ after(grammarAccess.getDefineAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group__2__Impl
	rule__Define__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getGroup_2()); }
(rule__Define__Group_2__0)*
{ after(grammarAccess.getDefineAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDefineAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Define__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group_2__0__Impl
	rule__Define__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getDefineAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getElementsAssignment_2_1()); }
(rule__Define__ElementsAssignment_2_1)
{ after(grammarAccess.getDefineAccess().getElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Uses__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__0__Impl
	rule__Uses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getUsesKeyword_0()); }

	'uses' 

{ after(grammarAccess.getUsesAccess().getUsesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__1__Impl
	rule__Uses__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getElementsAssignment_1()); }
(rule__Uses__ElementsAssignment_1)
{ after(grammarAccess.getUsesAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__2__Impl
	rule__Uses__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getGroup_2()); }
(rule__Uses__Group_2__0)*
{ after(grammarAccess.getUsesAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getUsesAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Uses__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group_2__0__Impl
	rule__Uses__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getUsesAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getElementsAssignment_2_1()); }
(rule__Uses__ElementsAssignment_2_1)
{ after(grammarAccess.getUsesAccess().getElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__0__Impl
	rule__StatementBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementBlockAction_0()); }
(

)
{ after(grammarAccess.getStatementBlockAccess().getStatementBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__1__Impl
	rule__StatementBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__2__Impl
	rule__StatementBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsAssignment_2()); }
(rule__StatementBlock__StatementsAssignment_2)*
{ after(grammarAccess.getStatementBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__0__Impl
	rule__Statement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakStatementAction_7_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getBreakStatementAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__1__Impl
	rule__Statement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakKeyword_7_1()); }

	'break' 

{ after(grammarAccess.getStatementAccess().getBreakKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_7_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__0__Impl
	rule__Statement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getContinueStatementAction_8_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getContinueStatementAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__1__Impl
	rule__Statement__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getContinueKeyword_8_1()); }

	'continue' 

{ after(grammarAccess.getStatementAccess().getContinueKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_8_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__0__Impl
	rule__Statement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnStatementAction_9_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getReturnStatementAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__1__Impl
	rule__Statement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnKeyword_9_1()); }

	'return' 

{ after(grammarAccess.getStatementAccess().getReturnKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_9_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VoidStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VoidStatement__Group__0__Impl
	rule__VoidStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidStatementAccess().getExprAssignment_0()); }
(rule__VoidStatement__ExprAssignment_0)
{ after(grammarAccess.getVoidStatementAccess().getExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VoidStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VoidStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getVoidStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__0__Impl
	rule__AssignmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getIdsAssignment_0()); }
(rule__AssignmentStatement__IdsAssignment_0)
{ after(grammarAccess.getAssignmentStatementAccess().getIdsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__1__Impl
	rule__AssignmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__2__Impl
	rule__AssignmentStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getRhsAssignment_2()); }
(rule__AssignmentStatement__RhsAssignment_2)
{ after(grammarAccess.getAssignmentStatementAccess().getRhsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAssignmentStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfThenElseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__0__Impl
	rule__IfThenElseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfThenElseStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__1__Impl
	rule__IfThenElseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getCondAssignment_1()); }
(rule__IfThenElseStatement__CondAssignment_1)
{ after(grammarAccess.getIfThenElseStatementAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__2__Impl
	rule__IfThenElseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIfThenElseStatementAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__3__Impl
	rule__IfThenElseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getThenBlockAssignment_3()); }
(rule__IfThenElseStatement__ThenBlockAssignment_3)
{ after(grammarAccess.getIfThenElseStatementAccess().getThenBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getElseAssignment_4()); }
(rule__IfThenElseStatement__ElseAssignment_4)
{ after(grammarAccess.getIfThenElseStatementAccess().getElseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Else__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group_0__0__Impl
	rule__Else__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getElseBlockAction_0_0()); }
(

)
{ after(grammarAccess.getElseAccess().getElseBlockAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group_0__1__Impl
	rule__Else__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getElseKeyword_0_1()); }

	'else' 

{ after(grammarAccess.getElseAccess().getElseKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getBlockAssignment_0_2()); }
(rule__Else__BlockAssignment_0_2)
{ after(grammarAccess.getElseAccess().getBlockAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Else__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group_1__0__Impl
	rule__Else__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getElseIfAction_1_0()); }
(

)
{ after(grammarAccess.getElseAccess().getElseIfAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group_1__1__Impl
	rule__Else__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getElseKeyword_1_1()); }

	'else' 

{ after(grammarAccess.getElseAccess().getElseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getIfThenElseAssignment_1_2()); }
(rule__Else__IfThenElseAssignment_1_2)
{ after(grammarAccess.getElseAccess().getIfThenElseAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
(rule__WhileStatement__CondAssignment_1)
{ after(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBlockAssignment_2()); }
(rule__WhileStatement__BlockAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getBlockAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getInitStatementAssignment_2()); }
(rule__ForStatement__InitStatementAssignment_2)
{ after(grammarAccess.getForStatementAccess().getInitStatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLimitExprAssignment_3()); }
(rule__ForStatement__LimitExprAssignment_3)
{ after(grammarAccess.getForStatementAccess().getLimitExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIncrementStatementAssignment_5()); }
(rule__ForStatement__IncrementStatementAssignment_5)
{ after(grammarAccess.getForStatementAccess().getIncrementStatementAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__6__Impl
	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBlockAssignment_7()); }
(rule__ForStatement__BlockAssignment_7)
{ after(grammarAccess.getForStatementAccess().getBlockAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__LabelStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabelStatement__Group__0__Impl
	rule__LabelStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelStatementAccess().getLabelKeyword_0()); }

	'label' 

{ after(grammarAccess.getLabelStatementAccess().getLabelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LabelStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabelStatement__Group__1__Impl
	rule__LabelStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelStatementAccess().getNameAssignment_1()); }
(rule__LabelStatement__NameAssignment_1)
{ after(grammarAccess.getLabelStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LabelStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabelStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getLabelStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GotoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__0__Impl
	rule__GotoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getGotoStatementAction_0()); }
(

)
{ after(grammarAccess.getGotoStatementAccess().getGotoStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__1__Impl
	rule__GotoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getGotoKeyword_1()); }

	'goto' 

{ after(grammarAccess.getGotoStatementAccess().getGotoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__2__Impl
	rule__GotoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getLabelAssignment_2()); }
(rule__GotoStatement__LabelAssignment_2)
{ after(grammarAccess.getGotoStatementAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__3__Impl
	rule__GotoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getGroup_3()); }
(rule__GotoStatement__Group_3__0)?
{ after(grammarAccess.getGotoStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getGotoStatementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GotoStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group_3__0__Impl
	rule__GotoStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getWhenKeyword_3_0()); }

	'when' 

{ after(grammarAccess.getGotoStatementAccess().getWhenKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getWhenExprAssignment_3_1()); }
(rule__GotoStatement__WhenExprAssignment_3_1)
{ after(grammarAccess.getGotoStatementAccess().getWhenExprAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EquationBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationBlock__Group__0__Impl
	rule__EquationBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationBlockAccess().getEquationBlockAction_0()); }
(

)
{ after(grammarAccess.getEquationBlockAccess().getEquationBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquationBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationBlock__Group__1__Impl
	rule__EquationBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getEquationBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquationBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationBlock__Group__2__Impl
	rule__EquationBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationBlockAccess().getEquationsAssignment_2()); }
(rule__EquationBlock__EquationsAssignment_2)*
{ after(grammarAccess.getEquationBlockAccess().getEquationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquationBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getEquationBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IdList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdList__Group__0__Impl
	rule__IdList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdListAccess().getIdsAssignment_0()); }
(rule__IdList__IdsAssignment_0)
{ after(grammarAccess.getIdListAccess().getIdsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdListAccess().getGroup_1()); }
(rule__IdList__Group_1__0)*
{ after(grammarAccess.getIdListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdList__Group_1__0__Impl
	rule__IdList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getIdListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdListAccess().getIdsAssignment_1_1()); }
(rule__IdList__IdsAssignment_1_1)
{ after(grammarAccess.getIdListAccess().getIdsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfThenElseExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group__0__Impl
	rule__IfThenElseExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getChoiceExprParserRuleCall_0()); }
	ruleChoiceExpr
{ after(grammarAccess.getIfThenElseExprAccess().getChoiceExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getGroup_1()); }
(rule__IfThenElseExpr__Group_1__0)?
{ after(grammarAccess.getIfThenElseExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfThenElseExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group_1__0__Impl
	rule__IfThenElseExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getGroup_1_0()); }
(rule__IfThenElseExpr__Group_1_0__0)
{ after(grammarAccess.getIfThenElseExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group_1__1__Impl
	rule__IfThenElseExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getThenExprAssignment_1_1()); }
(rule__IfThenElseExpr__ThenExprAssignment_1_1)
{ after(grammarAccess.getIfThenElseExprAccess().getThenExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group_1__2__Impl
	rule__IfThenElseExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getIfThenElseExprAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseExpr__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getElseExprAssignment_1_3()); }
(rule__IfThenElseExpr__ElseExprAssignment_1_3)
{ after(grammarAccess.getIfThenElseExprAccess().getElseExprAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfThenElseExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getGroup_1_0_0()); }
(rule__IfThenElseExpr__Group_1_0_0__0)
{ after(grammarAccess.getIfThenElseExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__IfThenElseExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group_1_0_0__0__Impl
	rule__IfThenElseExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getIfThenElseExprCondExprAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getIfThenElseExprAccess().getIfThenElseExprCondExprAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElseExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getQuestionMarkKeyword_1_0_0_1()); }

	'?' 

{ after(grammarAccess.getIfThenElseExprAccess().getQuestionMarkKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChoiceExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceExpr__Group_0__0__Impl
	rule__ChoiceExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getChoiceExprAction_0_0()); }
(

)
{ after(grammarAccess.getChoiceExprAccess().getChoiceExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceExpr__Group_0__1__Impl
	rule__ChoiceExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getChoiceKeyword_0_1()); }

	'choice' 

{ after(grammarAccess.getChoiceExprAccess().getChoiceKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceExpr__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceExpr__Group_0__2__Impl
	rule__ChoiceExpr__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getChoiceExprAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceExpr__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceExpr__Group_0__3__Impl
	rule__ChoiceExpr__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getFirstAssignment_0_3()); }
(rule__ChoiceExpr__FirstAssignment_0_3)
{ after(grammarAccess.getChoiceExprAccess().getFirstAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceExpr__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceExpr__Group_0__4__Impl
	rule__ChoiceExpr__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getCommaKeyword_0_4()); }

	',' 

{ after(grammarAccess.getChoiceExprAccess().getCommaKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceExpr__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceExpr__Group_0__5__Impl
	rule__ChoiceExpr__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getSecondAssignment_0_5()); }
(rule__ChoiceExpr__SecondAssignment_0_5)
{ after(grammarAccess.getChoiceExprAccess().getSecondAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceExpr__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceExpr__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getRightParenthesisKeyword_0_6()); }

	')' 

{ after(grammarAccess.getChoiceExprAccess().getRightParenthesisKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ImpliesExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__0__Impl
	rule__ImpliesExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
	ruleOrExpr
{ after(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1()); }
(rule__ImpliesExpr__Group_1__0)?
{ after(grammarAccess.getImpliesExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__0__Impl
	rule__ImpliesExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
(rule__ImpliesExpr__Group_1_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
(rule__ImpliesExpr__RightAssignment_1_1)
{ after(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
(rule__ImpliesExpr__Group_1_0_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ImpliesExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__0__Impl
	rule__ImpliesExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
(rule__ImpliesExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
(rule__OrExpr__Group_1__0)*
{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0()); }
(rule__OrExpr__Group_1_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
(rule__OrExpr__RightAssignment_1_1)
{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
(rule__OrExpr__Group_1_0_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__0__Impl
	rule__OrExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1()); }
(rule__OrExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRelationalExprParserRuleCall_0()); }
	ruleRelationalExpr
{ after(grammarAccess.getAndExprAccess().getRelationalExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
(rule__AndExpr__Group_1__0)*
{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0()); }
(rule__AndExpr__Group_1_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
(rule__AndExpr__RightAssignment_1_1)
{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
(rule__AndExpr__Group_1_0_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__0__Impl
	rule__AndExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1()); }
(rule__AndExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__0__Impl
	rule__RelationalExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getPlusExprParserRuleCall_0()); }
	rulePlusExpr
{ after(grammarAccess.getRelationalExprAccess().getPlusExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1()); }
(rule__RelationalExpr__Group_1__0)?
{ after(grammarAccess.getRelationalExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__0__Impl
	rule__RelationalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1_0()); }
(rule__RelationalExpr__Group_1_0__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightAssignment_1_1()); }
(rule__RelationalExpr__RightAssignment_1_1)
{ after(grammarAccess.getRelationalExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1_0_0()); }
(rule__RelationalExpr__Group_1_0_0__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RelationalExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0_0__0__Impl
	rule__RelationalExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpAssignment_1_0_0_1()); }
(rule__RelationalExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getRelationalExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group__0__Impl
	rule__PlusExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getMultExprParserRuleCall_0()); }
	ruleMultExpr
{ after(grammarAccess.getPlusExprAccess().getMultExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1()); }
(rule__PlusExpr__Group_1__0)*
{ after(grammarAccess.getPlusExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1__0__Impl
	rule__PlusExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1_0()); }
(rule__PlusExpr__Group_1_0__0)
{ after(grammarAccess.getPlusExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getRightAssignment_1_1()); }
(rule__PlusExpr__RightAssignment_1_1)
{ after(grammarAccess.getPlusExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1_0_0()); }
(rule__PlusExpr__Group_1_0_0__0)
{ after(grammarAccess.getPlusExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PlusExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0_0__0__Impl
	rule__PlusExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getPlusExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpAssignment_1_0_0_1()); }
(rule__PlusExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getPlusExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpr__Group__0__Impl
	rule__MultExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
{ after(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getGroup_1()); }
(rule__MultExpr__Group_1__0)*
{ after(grammarAccess.getMultExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpr__Group_1__0__Impl
	rule__MultExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getGroup_1_0()); }
(rule__MultExpr__Group_1_0__0)
{ after(grammarAccess.getMultExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getRightAssignment_1_1()); }
(rule__MultExpr__RightAssignment_1_1)
{ after(grammarAccess.getMultExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getGroup_1_0_0()); }
(rule__MultExpr__Group_1_0_0__0)
{ after(grammarAccess.getMultExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MultExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpr__Group_1_0_0__0__Impl
	rule__MultExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getOpAssignment_1_0_0_1()); }
(rule__MultExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getMultExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getUnaryNegationExprAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryExprAccess().getUnaryNegationExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_1__1__Impl
	rule__UnaryExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getNotKeyword_1_1()); }

	'not' 

{ after(grammarAccess.getUnaryExprAccess().getNotKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_1_2()); }
(rule__UnaryExpr__ExprAssignment_1_2)
{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_2__0__Impl
	rule__UnaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getUnaryMinusExprAction_2_0()); }
(

)
{ after(grammarAccess.getUnaryExprAccess().getUnaryMinusExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_2__1__Impl
	rule__UnaryExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_2_1()); }

	'-' 

{ after(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_2_2()); }
(rule__UnaryExpr__ExprAssignment_2_2)
{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AccessExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group__0__Impl
	rule__AccessExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getTerminalExprParserRuleCall_0()); }
	ruleTerminalExpr
{ after(grammarAccess.getAccessExprAccess().getTerminalExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getAlternatives_1()); }
(rule__AccessExpr__Alternatives_1)*
{ after(grammarAccess.getAccessExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AccessExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_0__0__Impl
	rule__AccessExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_0_0()); }
(rule__AccessExpr__Group_1_0_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getFieldAssignment_1_0_1()); }
(rule__AccessExpr__FieldAssignment_1_0_1)
{ after(grammarAccess.getAccessExprAccess().getFieldAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AccessExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_0_0_0()); }
(rule__AccessExpr__Group_1_0_0_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AccessExpr__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_0_0_0__0__Impl
	rule__AccessExpr__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getRecordAccessExprRecordAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getAccessExprAccess().getRecordAccessExprRecordAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getFullStopKeyword_1_0_0_0_1()); }

	'.' 

{ after(grammarAccess.getAccessExprAccess().getFullStopKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AccessExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1__0__Impl
	rule__AccessExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_1_0()); }
(rule__AccessExpr__Group_1_1_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1__1__Impl
	rule__AccessExpr__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getValueAssignment_1_1_1()); }
(rule__AccessExpr__ValueAssignment_1_1_1)
{ after(grammarAccess.getAccessExprAccess().getValueAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getAccessExprAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AccessExpr__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_1_0_0()); }
(rule__AccessExpr__Group_1_1_0_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AccessExpr__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1_0_0__0__Impl
	rule__AccessExpr__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getRecordUpdateExprRecordAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getAccessExprAccess().getRecordUpdateExprRecordAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1_0_0__1__Impl
	rule__AccessExpr__Group_1_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getLeftCurlyBracketKeyword_1_1_0_0_1()); }

	'{' 

{ after(grammarAccess.getAccessExprAccess().getLeftCurlyBracketKeyword_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_1_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1_0_0__2__Impl
	rule__AccessExpr__Group_1_1_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getFieldAssignment_1_1_0_0_2()); }
(rule__AccessExpr__FieldAssignment_1_1_0_0_2)
{ after(grammarAccess.getAccessExprAccess().getFieldAssignment_1_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_1_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_1_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_1_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getColonEqualsSignKeyword_1_1_0_0_3()); }

	':=' 

{ after(grammarAccess.getAccessExprAccess().getColonEqualsSignKeyword_1_1_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AccessExpr__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2__0__Impl
	rule__AccessExpr__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_2_0()); }
(rule__AccessExpr__Group_1_2_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2__1__Impl
	rule__AccessExpr__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getIndexAssignment_1_2_1()); }
(rule__AccessExpr__IndexAssignment_1_2_1)
{ after(grammarAccess.getAccessExprAccess().getIndexAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2__2__Impl
	rule__AccessExpr__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_2_2()); }
(rule__AccessExpr__Group_1_2_2__0)?
{ after(grammarAccess.getAccessExprAccess().getGroup_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getRightSquareBracketKeyword_1_2_3()); }

	']' 

{ after(grammarAccess.getAccessExprAccess().getRightSquareBracketKeyword_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AccessExpr__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_2_0_0()); }
(rule__AccessExpr__Group_1_2_0_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AccessExpr__Group_1_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_0_0__0__Impl
	rule__AccessExpr__Group_1_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getArrayAccessExprArrayAction_1_2_0_0_0()); }
(

)
{ after(grammarAccess.getAccessExprAccess().getArrayAccessExprArrayAction_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getLeftSquareBracketKeyword_1_2_0_0_1()); }

	'[' 

{ after(grammarAccess.getAccessExprAccess().getLeftSquareBracketKeyword_1_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AccessExpr__Group_1_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_2__0__Impl
	rule__AccessExpr__Group_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_2_2_0()); }
(rule__AccessExpr__Group_1_2_2_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getValueAssignment_1_2_2_1()); }
(rule__AccessExpr__ValueAssignment_1_2_2_1)
{ after(grammarAccess.getAccessExprAccess().getValueAssignment_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AccessExpr__Group_1_2_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getGroup_1_2_2_0_0()); }
(rule__AccessExpr__Group_1_2_2_0_0__0)
{ after(grammarAccess.getAccessExprAccess().getGroup_1_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AccessExpr__Group_1_2_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_2_0_0__0__Impl
	rule__AccessExpr__Group_1_2_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getArrayUpdateExprAccessAction_1_2_2_0_0_0()); }
(

)
{ after(grammarAccess.getAccessExprAccess().getArrayUpdateExprAccessAction_1_2_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessExpr__Group_1_2_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessExpr__Group_1_2_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__Group_1_2_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getColonEqualsSignKeyword_1_2_2_0_0_1()); }

	':=' 

{ after(grammarAccess.getAccessExprAccess().getColonEqualsSignKeyword_1_2_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_0__0__Impl
	rule__TerminalExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_0__1__Impl
	rule__TerminalExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getExprParserRuleCall_0_1()); }
	ruleExpr
{ after(grammarAccess.getTerminalExprAccess().getExprParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_1__0__Impl
	rule__TerminalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getBooleanLiteralExprAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getBooleanLiteralExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getBoolValAssignment_1_1()); }
(rule__TerminalExpr__BoolValAssignment_1_1)
{ after(grammarAccess.getTerminalExprAccess().getBoolValAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_2__0__Impl
	rule__TerminalExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIntegerLiteralExprAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getIntegerLiteralExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIntValAssignment_2_1()); }
(rule__TerminalExpr__IntValAssignment_2_1)
{ after(grammarAccess.getTerminalExprAccess().getIntValAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_3__0__Impl
	rule__TerminalExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIntegerWildCardExprAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getIntegerWildCardExprAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getAsteriskKeyword_3_1()); }

	'*' 

{ after(grammarAccess.getTerminalExprAccess().getAsteriskKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_4__0__Impl
	rule__TerminalExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRealLiteralExprAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getRealLiteralExprAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRealValAssignment_4_1()); }
(rule__TerminalExpr__RealValAssignment_4_1)
{ after(grammarAccess.getTerminalExprAccess().getRealValAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__0__Impl
	rule__TerminalExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getStringLiteralExprAction_5_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getStringLiteralExprAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getStringValAssignment_5_1()); }
(rule__TerminalExpr__StringValAssignment_5_1)
{ after(grammarAccess.getTerminalExprAccess().getStringValAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__0__Impl
	rule__TerminalExpr__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getInitExprAction_6_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getInitExprAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__1__Impl
	rule__TerminalExpr__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getInitKeyword_6_1()); }

	'init' 

{ after(grammarAccess.getTerminalExprAccess().getInitKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdAssignment_6_2()); }
(rule__TerminalExpr__IdAssignment_6_2)
{ after(grammarAccess.getTerminalExprAccess().getIdAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpr__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_7__0__Impl
	rule__TerminalExpr__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getSecondInitAction_7_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getSecondInitAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_7__1__Impl
	rule__TerminalExpr__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getSecond_initKeyword_7_1()); }

	'second_init' 

{ after(grammarAccess.getTerminalExprAccess().getSecond_initKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdAssignment_7_2()); }
(rule__TerminalExpr__IdAssignment_7_2)
{ after(grammarAccess.getTerminalExprAccess().getIdAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpr__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_10__0__Impl
	rule__TerminalExpr__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdExprAction_10_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getIdExprAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdAssignment_10_1()); }
(rule__TerminalExpr__IdAssignment_10_1)
{ after(grammarAccess.getTerminalExprAccess().getIdAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_11__0__Impl
	rule__TerminalExpr__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFcnCallExprAction_11_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getFcnCallExprAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_11__1__Impl
	rule__TerminalExpr__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdAssignment_11_1()); }
(rule__TerminalExpr__IdAssignment_11_1)
{ after(grammarAccess.getTerminalExprAccess().getIdAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_11__2__Impl
	rule__TerminalExpr__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_11_2()); }

	'(' 

{ after(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_11__3__Impl
	rule__TerminalExpr__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_11__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getExprsAssignment_11_3()); }
(rule__TerminalExpr__ExprsAssignment_11_3)
{ after(grammarAccess.getTerminalExprAccess().getExprsAssignment_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_11__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_11__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_11__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_11_4()); }

	')' 

{ after(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_11_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group__0__Impl
	rule__ArrayExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getArrayKeyword_0()); }

	'array' 

{ after(grammarAccess.getArrayExprAccess().getArrayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group__1__Impl
	rule__ArrayExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getArrayDefinitionAssignment_1()); }
(rule__ArrayExpr__ArrayDefinitionAssignment_1)
{ after(grammarAccess.getArrayExprAccess().getArrayDefinitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group__2__Impl
	rule__ArrayExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getArrayExprAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group__3__Impl
	rule__ArrayExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getExprListAssignment_3()); }
(rule__ArrayExpr__ExprListAssignment_3)
{ after(grammarAccess.getArrayExprAccess().getExprListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group__4__Impl
	rule__ArrayExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getGroup_4()); }
(rule__ArrayExpr__Group_4__0)*
{ after(grammarAccess.getArrayExprAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getArrayExprAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ArrayExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group_4__0__Impl
	rule__ArrayExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getArrayExprAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getExprListAssignment_4_1()); }
(rule__ArrayExpr__ExprListAssignment_4_1)
{ after(grammarAccess.getArrayExprAccess().getExprListAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__0__Impl
	rule__RecordExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getRecordKeyword_0()); }

	'record' 

{ after(grammarAccess.getRecordExprAccess().getRecordKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__1__Impl
	rule__RecordExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getRecordDefinitionAssignment_1()); }
(rule__RecordExpr__RecordDefinitionAssignment_1)
{ after(grammarAccess.getRecordExprAccess().getRecordDefinitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__2__Impl
	rule__RecordExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRecordExprAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__3__Impl
	rule__RecordExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getFieldExprListAssignment_3()); }
(rule__RecordExpr__FieldExprListAssignment_3)
{ after(grammarAccess.getRecordExprAccess().getFieldExprListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__4__Impl
	rule__RecordExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getGroup_4()); }
(rule__RecordExpr__Group_4__0)*
{ after(grammarAccess.getRecordExprAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRecordExprAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RecordExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group_4__0__Impl
	rule__RecordExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getRecordExprAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getFieldExprListAssignment_4_1()); }
(rule__RecordExpr__FieldExprListAssignment_4_1)
{ after(grammarAccess.getRecordExprAccess().getFieldExprListAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordFieldExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldExpr__Group__0__Impl
	rule__RecordFieldExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldExprAccess().getFieldNameAssignment_0()); }
(rule__RecordFieldExpr__FieldNameAssignment_0)
{ after(grammarAccess.getRecordFieldExprAccess().getFieldNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldExpr__Group__1__Impl
	rule__RecordFieldExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldExprAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getRecordFieldExprAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldExprAccess().getFieldExprAssignment_2()); }
(rule__RecordFieldExpr__FieldExprAssignment_2)
{ after(grammarAccess.getRecordFieldExprAccess().getFieldExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprList__Group__0__Impl
	rule__ExprList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getExprListAction_0()); }
(

)
{ after(grammarAccess.getExprListAccess().getExprListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getGroup_1()); }
(rule__ExprList__Group_1__0)?
{ after(grammarAccess.getExprListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprList__Group_1__0__Impl
	rule__ExprList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getExprListAssignment_1_0()); }
(rule__ExprList__ExprListAssignment_1_0)
{ after(grammarAccess.getExprListAccess().getExprListAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getGroup_1_1()); }
(rule__ExprList__Group_1_1__0)*
{ after(grammarAccess.getExprListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprList__Group_1_1__0__Impl
	rule__ExprList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getExprListAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getExprListAssignment_1_1_1()); }
(rule__ExprList__ExprListAssignment_1_1_1)
{ after(grammarAccess.getExprListAccess().getExprListAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Specification__DeclarationsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getDeclarationsDeclarationParserRuleCall_0()); }
	ruleDeclaration{ after(grammarAccess.getSpecificationAccess().getDeclarationsDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__CommentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getCommentSEMANTIC_COMMENTTerminalRuleCall_0()); }
	RULE_SEMANTIC_COMMENT{ after(grammarAccess.getCommentAccess().getCommentSEMANTIC_COMMENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getExternalFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__InputsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getInputsInputArgListParserRuleCall_4_0()); }
	ruleInputArgList{ after(grammarAccess.getExternalFunctionAccess().getInputsInputArgListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__OutputAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalFunctionAccess().getOutputOutputArgParserRuleCall_8_0()); }
	ruleOutputArg{ after(grammarAccess.getExternalFunctionAccess().getOutputOutputArgParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getExternalProcedureAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__InputsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getInputsInputArgListParserRuleCall_4_0()); }
	ruleInputArgList{ after(grammarAccess.getExternalProcedureAccess().getInputsInputArgListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__OutputsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getOutputsOutputArgListParserRuleCall_8_0()); }
	ruleOutputArgList{ after(grammarAccess.getExternalProcedureAccess().getOutputsOutputArgListParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalProcedure__AttributeBlockAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalProcedureAccess().getAttributeBlockAttributeBlockParserRuleCall_10_0()); }
	ruleAttributeBlock{ after(grammarAccess.getExternalProcedureAccess().getAttributeBlockAttributeBlockParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLocalFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__InputsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getInputsInputArgListParserRuleCall_3_0()); }
	ruleInputArgList{ after(grammarAccess.getLocalFunctionAccess().getInputsInputArgListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__OutputAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getOutputOutputArgParserRuleCall_7_0()); }
	ruleOutputArg{ after(grammarAccess.getLocalFunctionAccess().getOutputOutputArgParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__VarBlockAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getVarBlockVarBlockParserRuleCall_9_0()); }
	ruleVarBlock{ after(grammarAccess.getLocalFunctionAccess().getVarBlockVarBlockParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__EquationBlockAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalFunctionAccess().getEquationBlockEquationBlockParserRuleCall_11_0()); }
	ruleEquationBlock{ after(grammarAccess.getLocalFunctionAccess().getEquationBlockEquationBlockParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLocalProcedureAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__InputsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getInputsInputArgListParserRuleCall_3_0()); }
	ruleInputArgList{ after(grammarAccess.getLocalProcedureAccess().getInputsInputArgListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__OutputsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getOutputsOutputArgListParserRuleCall_7_0()); }
	ruleOutputArgList{ after(grammarAccess.getLocalProcedureAccess().getOutputsOutputArgListParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__VarBlockAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getVarBlockVarBlockParserRuleCall_9_0()); }
	ruleVarBlock{ after(grammarAccess.getLocalProcedureAccess().getVarBlockVarBlockParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__AttributeBlockAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getAttributeBlockAttributeBlockParserRuleCall_10_0()); }
	ruleAttributeBlock{ after(grammarAccess.getLocalProcedureAccess().getAttributeBlockAttributeBlockParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalProcedure__StatementblockAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalProcedureAccess().getStatementblockStatementBlockParserRuleCall_12_0()); }
	ruleStatementBlock{ after(grammarAccess.getLocalProcedureAccess().getStatementblockStatementBlockParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeTypeParserRuleCall_0_4_0()); }
	ruleType{ after(grammarAccess.getTypeDeclarationAccess().getTypeTypeParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__LocalsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getLocalsLocalArgParserRuleCall_0_3_0()); }
	ruleLocalArg{ after(grammarAccess.getVarBlockAccess().getLocalsLocalArgParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEnumTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__EnumerationsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getEnumerationsEnumValueParserRuleCall_5_0()); }
	ruleEnumValue{ after(grammarAccess.getEnumTypeDefAccess().getEnumerationsEnumValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDef__EnumerationsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDefAccess().getEnumerationsEnumValueParserRuleCall_6_1_0()); }
	ruleEnumValue{ after(grammarAccess.getEnumTypeDefAccess().getEnumerationsEnumValueParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getRecordTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__FieldsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getFieldsRecordFieldTypeParserRuleCall_5_0()); }
	ruleRecordFieldType{ after(grammarAccess.getRecordTypeDefAccess().getFieldsRecordFieldTypeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTypeDef__FieldsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeDefAccess().getFieldsRecordFieldTypeParserRuleCall_6_1_0()); }
	ruleRecordFieldType{ after(grammarAccess.getRecordTypeDefAccess().getFieldsRecordFieldTypeParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getArrayTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__BaseTypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getBaseTypeTypeParserRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getArrayTypeDefAccess().getBaseTypeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__SizeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getSizeINTTerminalRuleCall_6_0()); }
	RULE_INT{ after(grammarAccess.getArrayTypeDefAccess().getSizeINTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeDef__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAbstractTypeDefAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldType__FieldNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldTypeAccess().getFieldNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getRecordFieldTypeAccess().getFieldNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldType__FieldTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldTypeAccess().getFieldTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getRecordFieldTypeAccess().getFieldTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstantDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getConstantDeclarationAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__ExprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getExprExprParserRuleCall_4_1_0()); }
	ruleExpr{ after(grammarAccess.getConstantDeclarationAccess().getExprExprParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGlobalDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDeclarationAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getGlobalDeclarationAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__InputArgsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getInputArgsInputArgParserRuleCall_1_0_0()); }
	ruleInputArg{ after(grammarAccess.getInputArgListAccess().getInputArgsInputArgParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputArgList__InputArgsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgListAccess().getInputArgsInputArgParserRuleCall_1_1_1_0()); }
	ruleInputArg{ after(grammarAccess.getInputArgListAccess().getInputArgsInputArgParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputArg__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getInputArgAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputArg__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArgAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getInputArgAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalArg__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalArgAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getLocalArgAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalArg__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalArgAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getLocalArgAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__OutputArgsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getOutputArgsOutputArgParserRuleCall_1_0_0()); }
	ruleOutputArg{ after(grammarAccess.getOutputArgListAccess().getOutputArgsOutputArgParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArgList__OutputArgsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgListAccess().getOutputArgsOutputArgParserRuleCall_1_1_1_0()); }
	ruleOutputArg{ after(grammarAccess.getOutputArgListAccess().getOutputArgsOutputArgParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArg__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getOutputArgAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArg__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArgAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getOutputArgAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EnumDefAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEnumDefEnumTypeDefCrossReference_5_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getEnumDefEnumTypeDefIDTerminalRuleCall_5_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getEnumDefEnumTypeDefIDTerminalRuleCall_5_2_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getEnumDefEnumTypeDefCrossReference_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__RecordDefAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRecordDefRecordTypeDefCrossReference_6_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getRecordDefRecordTypeDefIDTerminalRuleCall_6_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getRecordDefRecordTypeDefIDTerminalRuleCall_6_2_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getRecordDefRecordTypeDefCrossReference_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ArrayDefAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArrayDefArrayTypeDefCrossReference_7_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getArrayDefArrayTypeDefIDTerminalRuleCall_7_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getArrayDefArrayTypeDefIDTerminalRuleCall_7_2_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getArrayDefArrayTypeDefCrossReference_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__AbstractDefAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAbstractDefAbstractTypeDefCrossReference_8_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getAbstractDefAbstractTypeDefIDTerminalRuleCall_8_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getAbstractDefAbstractTypeDefIDTerminalRuleCall_8_2_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getAbstractDefAbstractTypeDefCrossReference_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__AliasAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAliasTypeAliasCrossReference_9_1_0()); }
(
{ before(grammarAccess.getTypeAccess().getAliasTypeAliasIDTerminalRuleCall_9_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getAliasTypeAliasIDTerminalRuleCall_9_1_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getAliasTypeAliasCrossReference_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBlock__AttributeListAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBlockAccess().getAttributeListAttributeParserRuleCall_0_3_0()); }
	ruleAttribute{ after(grammarAccess.getAttributeBlockAccess().getAttributeListAttributeParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPreconditionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__ExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionAccess().getExprExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getPreconditionAccess().getExprExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPostconditionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__ExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionAccess().getExprExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getPostconditionAccess().getExprExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineUseRef__ReferenceExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineUseRefAccess().getReferenceExprExprParserRuleCall_0()); }
	ruleExpr{ after(grammarAccess.getDefineUseRefAccess().getReferenceExprExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Define__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getElementsDefineUseRefParserRuleCall_1_0()); }
	ruleDefineUseRef{ after(grammarAccess.getDefineAccess().getElementsDefineUseRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Define__ElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getElementsDefineUseRefParserRuleCall_2_1_0()); }
	ruleDefineUseRef{ after(grammarAccess.getDefineAccess().getElementsDefineUseRefParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getElementsDefineUseRefParserRuleCall_1_0()); }
	ruleDefineUseRef{ after(grammarAccess.getUsesAccess().getElementsDefineUseRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__ElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getElementsDefineUseRefParserRuleCall_2_1_0()); }
	ruleDefineUseRef{ after(grammarAccess.getUsesAccess().getElementsDefineUseRefParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VoidStatement__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidStatementAccess().getExprExprParserRuleCall_0_0()); }
	ruleExpr{ after(grammarAccess.getVoidStatementAccess().getExprExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__IdsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getIdsIdListParserRuleCall_0_0()); }
	ruleIdList{ after(grammarAccess.getAssignmentStatementAccess().getIdsIdListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__RhsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getRhsExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getAssignmentStatementAccess().getRhsExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getCondExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getIfThenElseStatementAccess().getCondExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__ThenBlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getThenBlockStatementBlockParserRuleCall_3_0()); }
	ruleStatementBlock{ after(grammarAccess.getIfThenElseStatementAccess().getThenBlockStatementBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__ElseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseStatementAccess().getElseElseParserRuleCall_4_0()); }
	ruleElse{ after(grammarAccess.getIfThenElseStatementAccess().getElseElseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Else__BlockAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getBlockStatementBlockParserRuleCall_0_2_0()); }
	ruleStatementBlock{ after(grammarAccess.getElseAccess().getBlockStatementBlockParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Else__IfThenElseAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getIfThenElseIfThenElseStatementParserRuleCall_1_2_0()); }
	ruleIfThenElseStatement{ after(grammarAccess.getElseAccess().getIfThenElseIfThenElseStatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getCondExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getWhileStatementAccess().getCondExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BlockAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBlockStatementBlockParserRuleCall_2_0()); }
	ruleStatementBlock{ after(grammarAccess.getWhileStatementAccess().getBlockStatementBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__InitStatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getInitStatementAssignmentStatementParserRuleCall_2_0()); }
	ruleAssignmentStatement{ after(grammarAccess.getForStatementAccess().getInitStatementAssignmentStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__LimitExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLimitExprExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getForStatementAccess().getLimitExprExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__IncrementStatementAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIncrementStatementAssignmentStatementParserRuleCall_5_0()); }
	ruleAssignmentStatement{ after(grammarAccess.getForStatementAccess().getIncrementStatementAssignmentStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__BlockAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBlockStatementBlockParserRuleCall_7_0()); }
	ruleStatementBlock{ after(grammarAccess.getForStatementAccess().getBlockStatementBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelStatementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLabelStatementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getLabelLabelStatementCrossReference_2_0()); }
(
{ before(grammarAccess.getGotoStatementAccess().getLabelLabelStatementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getGotoStatementAccess().getLabelLabelStatementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getGotoStatementAccess().getLabelLabelStatementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStatement__WhenExprAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStatementAccess().getWhenExprExprParserRuleCall_3_1_0()); }
	ruleExpr{ after(grammarAccess.getGotoStatementAccess().getWhenExprExprParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EquationBlock__EquationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationBlockAccess().getEquationsEquationParserRuleCall_2_0()); }
	ruleEquation{ after(grammarAccess.getEquationBlockAccess().getEquationsEquationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdList__IdsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdListAccess().getIdsVariableRefCrossReference_0_0()); }
(
{ before(grammarAccess.getIdListAccess().getIdsVariableRefIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getIdListAccess().getIdsVariableRefIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getIdListAccess().getIdsVariableRefCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdList__IdsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdListAccess().getIdsVariableRefCrossReference_1_1_0()); }
(
{ before(grammarAccess.getIdListAccess().getIdsVariableRefIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIdListAccess().getIdsVariableRefIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getIdListAccess().getIdsVariableRefCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__ThenExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getThenExprExprParserRuleCall_1_1_0()); }
	ruleExpr{ after(grammarAccess.getIfThenElseExprAccess().getThenExprExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseExpr__ElseExprAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseExprAccess().getElseExprExprParserRuleCall_1_3_0()); }
	ruleExpr{ after(grammarAccess.getIfThenElseExprAccess().getElseExprExprParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__FirstAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getFirstExprParserRuleCall_0_3_0()); }
	ruleExpr{ after(grammarAccess.getChoiceExprAccess().getFirstExprParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceExpr__SecondAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceExprAccess().getSecondExprParserRuleCall_0_5_0()); }
	ruleExpr{ after(grammarAccess.getChoiceExprAccess().getSecondExprParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }

	'=>' 

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
	ruleImpliesExpr{ after(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }

	'or' 

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
	ruleAndExpr{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }

	'and' 

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightRelationalExprParserRuleCall_1_1_0()); }
	ruleRelationalExpr{ after(grammarAccess.getAndExprAccess().getRightRelationalExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_0_0_1_0()); }
	ruleRelationalOp{ after(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightPlusExprParserRuleCall_1_1_0()); }
	rulePlusExpr{ after(grammarAccess.getRelationalExprAccess().getRightPlusExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpAlternatives_1_0_0_1_0()); }
(rule__PlusExpr__OpAlternatives_1_0_0_1_0)
{ after(grammarAccess.getPlusExprAccess().getOpAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getRightMultExprParserRuleCall_1_1_0()); }
	ruleMultExpr{ after(grammarAccess.getPlusExprAccess().getRightMultExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getOpAlternatives_1_0_0_1_0()); }
(rule__MultExpr__OpAlternatives_1_0_0_1_0)
{ after(grammarAccess.getMultExprAccess().getOpAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
	ruleUnaryExpr{ after(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_1_2_0()); }
	ruleUnaryExpr{ after(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_2_2_0()); }
	ruleUnaryExpr{ after(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__FieldAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getFieldIDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getAccessExprAccess().getFieldIDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__FieldAssignment_1_1_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getFieldIDTerminalRuleCall_1_1_0_0_2_0()); }
	RULE_ID{ after(grammarAccess.getAccessExprAccess().getFieldIDTerminalRuleCall_1_1_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__ValueAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getValueExprParserRuleCall_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getAccessExprAccess().getValueExprParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__IndexAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getIndexExprParserRuleCall_1_2_1_0()); }
	ruleExpr{ after(grammarAccess.getAccessExprAccess().getIndexExprParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessExpr__ValueAssignment_1_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessExprAccess().getValueExprParserRuleCall_1_2_2_1_0()); }
	ruleExpr{ after(grammarAccess.getAccessExprAccess().getValueExprParserRuleCall_1_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__BoolValAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getBoolValBOOLEANTerminalRuleCall_1_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getTerminalExprAccess().getBoolValBOOLEANTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__IntValAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIntValINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getTerminalExprAccess().getIntValINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__RealValAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRealValREALTerminalRuleCall_4_1_0()); }
	RULE_REAL{ after(grammarAccess.getTerminalExprAccess().getRealValREALTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__StringValAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getStringValSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalExprAccess().getStringValSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__IdAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdVariableRefCrossReference_6_2_0()); }
(
{ before(grammarAccess.getTerminalExprAccess().getIdVariableRefIDTerminalRuleCall_6_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTerminalExprAccess().getIdVariableRefIDTerminalRuleCall_6_2_0_1()); }
)
{ after(grammarAccess.getTerminalExprAccess().getIdVariableRefCrossReference_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__IdAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdVariableRefCrossReference_7_2_0()); }
(
{ before(grammarAccess.getTerminalExprAccess().getIdVariableRefIDTerminalRuleCall_7_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTerminalExprAccess().getIdVariableRefIDTerminalRuleCall_7_2_0_1()); }
)
{ after(grammarAccess.getTerminalExprAccess().getIdVariableRefCrossReference_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__IdAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdVariableRefCrossReference_10_1_0()); }
(
{ before(grammarAccess.getTerminalExprAccess().getIdVariableRefIDTerminalRuleCall_10_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTerminalExprAccess().getIdVariableRefIDTerminalRuleCall_10_1_0_1()); }
)
{ after(grammarAccess.getTerminalExprAccess().getIdVariableRefCrossReference_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__IdAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdFunctionRefCrossReference_11_1_0()); }
(
{ before(grammarAccess.getTerminalExprAccess().getIdFunctionRefIDTerminalRuleCall_11_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTerminalExprAccess().getIdFunctionRefIDTerminalRuleCall_11_1_0_1()); }
)
{ after(grammarAccess.getTerminalExprAccess().getIdFunctionRefCrossReference_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__ExprsAssignment_11_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getExprsExprListParserRuleCall_11_3_0()); }
	ruleExprList{ after(grammarAccess.getTerminalExprAccess().getExprsExprListParserRuleCall_11_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__ArrayDefinitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getArrayDefinitionArrayTypeDefCrossReference_1_0()); }
(
{ before(grammarAccess.getArrayExprAccess().getArrayDefinitionArrayTypeDefIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getArrayExprAccess().getArrayDefinitionArrayTypeDefIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getArrayExprAccess().getArrayDefinitionArrayTypeDefCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__ExprListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getExprListExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getArrayExprAccess().getExprListExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpr__ExprListAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayExprAccess().getExprListExprParserRuleCall_4_1_0()); }
	ruleExpr{ after(grammarAccess.getArrayExprAccess().getExprListExprParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__RecordDefinitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getRecordDefinitionRecordTypeDefCrossReference_1_0()); }
(
{ before(grammarAccess.getRecordExprAccess().getRecordDefinitionRecordTypeDefIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRecordExprAccess().getRecordDefinitionRecordTypeDefIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRecordExprAccess().getRecordDefinitionRecordTypeDefCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__FieldExprListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getFieldExprListRecordFieldExprParserRuleCall_3_0()); }
	ruleRecordFieldExpr{ after(grammarAccess.getRecordExprAccess().getFieldExprListRecordFieldExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__FieldExprListAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getFieldExprListRecordFieldExprParserRuleCall_4_1_0()); }
	ruleRecordFieldExpr{ after(grammarAccess.getRecordExprAccess().getFieldExprListRecordFieldExprParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldExpr__FieldNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldExprAccess().getFieldNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getRecordFieldExprAccess().getFieldNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldExpr__FieldExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldExprAccess().getFieldExprExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getRecordFieldExprAccess().getFieldExprExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__ExprListAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getExprListExprParserRuleCall_1_0_0()); }
	ruleExpr{ after(grammarAccess.getExprListAccess().getExprListExprParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__ExprListAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprListAccess().getExprListExprParserRuleCall_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getExprListAccess().getExprListExprParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





RULE_SEMANTIC_COMMENT : '/#' ( options {greedy=false;} : . )*'#/';

RULE_INT : ('0'..'9')+;

RULE_BOOLEAN : ('true'|'false');

RULE_REAL : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


